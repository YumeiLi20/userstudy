ggplot(aes(x = Rarity, y = n)) + geom_col(alpha = 0.75, aes(fill = n))
occurences %>%
ggplot(aes(x = Rarity, y = n)) + geom_col(alpha = 0.75, aes(fill = -n))
occurences %>%
ggplot(aes(x = Rarity, y = n)) + geom_col(alpha = 0.75, aes(fill = n))
ggthemr("pale")
occurences %>%
ggplot(aes(x = Rarity, y = n)) + geom_col(alpha = 0.75, aes(fill = n))
ggthemr("flat")
occurences %>%
ggplot(aes(x = Rarity, y = n)) + geom_col(alpha = 0.75, aes(fill = n))
random_colours
blue <- define_palette(
#swatch = random_colours,
gradient = c(lower = "lightblue", upper = "darrkblue")
)
blue <- define_palette(
swatch = c("blue"),
gradient = c(lower = "lightblue", upper = "darrkblue")
)
blue <- define_palette(
swatch = c("blue"),
gradient = c(lower = "lightblue", upper = "darkblue")
)
blue <- define_palette(
swatch = c("lightblue", "darkblue"),
gradient = c(lower = "lightblue", upper = "darkblue")
)
ggthemr("flat")
ggthemr(blue)
occurences %>%
ggplot(aes(x = Rarity, y = n)) + geom_col(alpha = 0.75, aes(fill = n))
occurences %>%
ggplot(aes(x = Rarity, y = n)) + geom_point(size = 5, alpha = 0.75, aes(fill = n))
occurences %>%
ggplot(aes(x = Rarity, y = n)) + geom_point(size = 5, alpha = 0.75, aes(color = n))
occurences %>%
ggplot(aes(x = Rarity, y = n)) + geom_point(size = 15, alpha = 0.75, aes(color = n))
occurences %>%
ggplot(aes(x = Rarity, y = n)) + geom_cols(alpha = 0.75, aes(color = n))
occurences %>%
ggplot(aes(x = Rarity, y = n)) + geom_col(alpha = 0.75, aes(color = n))
occurences %>%
ggplot(aes(x = Rarity, y = n)) + geom_col(alpha = 0.75, aes(fill = n))
library(ggthemr)
library(tidyverse)
library(ggvis)
data <- read_csv("C:/Users/gurud/Google Drive/Research Assistantship/seq/Gurudev Ilangovan/Record Linkage/userstudy/public/data/data_natural.csv")
occurences <- tibble(Rarity = c(data$FF, data$LF))
occurences <-
occurences %>%
count(Rarity) %>%
mutate(Rarity = c("Unique", "Rare", "Common", "Extremely Frequent"),
Rarity = fct_inorder(Rarity))
occurences
occurences <-
occurences %>%
count(Rarity)
occurences
blue <- define_palette(
swatch = c("lightblue", "darkblue"),
gradient = c(lower = "lightblue", upper = "darkblue")
)
ggthemr(blue)
occurences %>%
ggplot(aes(x = Rarity, y = n)) + geom_col(alpha = 0.75, aes(fill = n))
library(ggthemr)
library(tidyverse)
library(ggvis)
data <- read_csv("C:/Users/gurud/Google Drive/Research Assistantship/seq/Gurudev Ilangovan/Record Linkage/userstudy/public/data/data_natural.csv")
occurences <- tibble(Rarity = c(data$FF, data$LF))
occurences <-
occurences %>%
count(Rarity) %>%
mutate(Rarity = c("Unique", "Rare", "Common", "Extremely Frequent"),
Rarity = fct_inorder(Rarity))
occurences %>%
ggvis(~Rarity,~n) %>% layer_bars(fill = "blue")
blue <- define_palette(
swatch = c("lightblue", "darkblue"),
gradient = c(lower = "lightblue", upper = "darkblue")
)
ggthemr(blue)
occurences %>%
ggplot(aes(x = Rarity, y = n)) + geom_col(alpha = 0.75, aes(fill = n))
data <- read_csv("C:/Users/gurud/Google Drive/Research Assistantship/seq/Gurudev Ilangovan/Record Linkage/userstudy/public/data/data_natural.csv")
occurences <- tibble(Rarity = c(data$FF, data$LF))
occurences <-
occurences %>%
count(Rarity) %>%
mutate(Rarity = c("Unique", "Rare", "Common", "Extremely Frequent"),
Rarity = fct_inorder(Rarity))
blue <- define_palette(
swatch = c("lightblue", "darkblue"),
gradient = c(lower = "lightblue", upper = "darkblue")
)
ggthemr(blue)
occurences %>%
ggplot(aes(x = Rarity, y = n)) + geom_col(alpha = 0.75, aes(fill = n))
occurences %>%
ggplot(aes(x = Rarity, y = n)) + geom_col()
occurences
occurences <-
occurences %>%
count(Rarity) %>%
mutate(Rarity = c("Unique", "Rare", "Common", "Extremely Frequent"),
Rarity = fct_inorder(Rarity))
occurences <-
occurences %>%
count(Rarity)
occurences %>%
ggvis(~Rarity,~n) %>% layer_bars(fill = "blue")
library(tidyverse)
depts <- read_csv("C:/Users/gurud/Desktop/new 2.csv")
depts
library(stringr)
depts <- read_csv("C:/Users/gurud/Desktop/new 2.csv", col_names = F)
depts %>%
mutate(depts = str_split())
depts
depts %>%
mutate(depts = str_split(X1, pattern = ">"))
View(depts)
depts %>%
mutate(depts = str(X1, pattern = ">")) %>%
View
depts %>%
mutate(depts = str_extract(X1, pattern = ">")) %>%
View
depts %>%
mutate(depts = str_extract(X1, pattern = ">[A-Z]")) %>%
View
depts %>%
mutate(depts = str_extract(X1, pattern = ">[A-Z]{4}")) %>%
View
depts
depts %>%
mutate(depts = str_extract(X1, pattern = ">[A-Z]{4} - [A-Za-z]*<")) %>%
View
depts %>%
mutate(depts = str_extract(X1, pattern = ">[A-Z]{4} - [A-Z a-z]*<")) %>%
View
depts %>%
mutate(depts = str_extract(X1, pattern = ">[A-Z]{4} - ^<")) %>%
View
depts %>%
mutate(depts = str_extract(X1, pattern = ">[A-Z]{4} - $<")) %>%
View
depts %>%
mutate(depts = str_extract(X1, pattern = ">[A-Z]{4} - [A-Z a-z]*<")) %>%
View
depts %>%
mutate(depts = str_extract(X1, pattern = ">[A-Z]{4} <")) %>%
View
depts %>%
mutate(depts = str_extract(X1, pattern = ">[A-Z]{4} - ?<")) %>%
View
depts %>%
mutate(depts = str_extract(X1, pattern = ">[A-Z]{4} - *<")) %>%
View
depts %>%
mutate(depts = str_extract(X1, pattern = ">[A-Z]{4} - * <")) %>%
View
depts %>%
mutate(depts = str_extract(X1, pattern = ">[A-Z]{4} - ?")) %>%
View
depts %>%
mutate(depts = str_extract(X1, pattern = ">[A-Z]{4} - .*123>?")) %>%
View
depts %>%
mutate(depts = str_extract(X1, pattern = ">[A-Z]{4} - .*123$>?")) %>%
View
depts %>%
mutate(depts = str_extract(X1, pattern = ">[A-Z]{4} - [A-z 0-9 :punct:]*<")) %>%
View
depts %>%
mutate(depts = str_extract(X1, pattern = ">[A-Z]{4} - [A-z 0-9 :punct:]*<"),
four_code = str_extract(X1, pattern = ">[A-Z]{4}) %>%
View
depts %>%
mutate(depts = str_extract(X1, pattern = ">[A-Z]{4} - [A-z 0-9 :punct:]*<"),
four_code = str_extract(X1, pattern = ">[A-Z]{4}")) %>%
View
depts %>%
mutate(depts = str_extract(X1, pattern = ">[A-Z]{4} - [A-z 0-9 :punct:]*<"),
four_code = str_extract(X1, pattern = ">[A-Z]{4}"),
four_code = str_sub(2)) %>%
View
depts %>%
mutate(depts = str_extract(X1, pattern = ">[A-Z]{4} - [A-z 0-9 :punct:]*<"),
four_code = str_extract(X1, pattern = ">[A-Z]{4}"),
four_code = str_sub(four_code,2)) %>%
View
depts <-
depts %>%
mutate(depts = str_extract(X1, pattern = ">[A-Z]{4} - [A-z 0-9 :punct:]*<"),
four_code = str_extract(X1, pattern = ">[A-Z]{4}"),
four_code = str_sub(four_code,2)) %T>%
View()
library(magrittr)
depts <-
depts %>%
mutate(depts = str_extract(X1, pattern = ">[A-Z]{4} - [A-z 0-9 :punct:]*<"),
four_code = str_extract(X1, pattern = ">[A-Z]{4}"),
four_code = str_sub(four_code,2)) %T>%
View()
depts %>%
write_csv("dept_list.csv")
install.packages("countrycode")
library(countrycode)
countrycode::countrycode_data
countrycode::countrycode()
countrycode <- countrycode_data
countrycode
library(tidyverse)
library(stringr)
library(magrittr)
countrycode %>%
select(country.name.en)
countrycode %$%
select(country.name.en)
countrycode %$%
country.name.en
countries <- countrycode %$%
country.name.en
countries <- c("Please select your country",countries)
tibble(country)
tibble(countries)
tibble(countries) %>%
write_csv("countries.csv")
ans1 %>%
select(-matches("_1")) %>%
mutate(DoB = format(as_date(DoB, format="%m/%d/%Y"), format = "%m/%d/%Y"))
library(tidyverse)
library(lubridate)
library(magrittr)
install.packages("tidyverse")
R.version
version(dplyr)
package_version(dplyr)
package_version("dplyr")
library(tidyverse)
package_version(dplyr)
?packageVersion
packageVersion(dplyr)
packageVersion("dplyr")
install.packages("dplyr")
install.packages("dplyr")
packageVersion(dplyr)
packageVersion("dplyr")
library(tidyverse)
library(ggthemr)
library(ggvis)
library(forcats)
library(RColorBrewer)
setwd("C:/Users/gurud/Google Drive/Research Assistantship/seq/Gurudev Ilangovan/Record Linkage/userstudy/pipeline/frequencies/")
fname_freq <- read_csv("./fname_freq.csv")
lname_freq <- read_csv("./lname_freq.csv")
starred_data_all <- read_csv("../data_output/all_starred_race.csv")
fname_starred <-
starred_data_all %>%
select(`First Name`, n = FF)
lname_starred <-
starred_data_all %>%
select(`Last Name`, n = LF)
custom <- define_palette(
# swatch = c("black","blue","red","darkgreen","darkgrey","darkorange","pink"),
swatch = c("#000000", brewer.pal(5,"Set1")),
gradient = c(lower = "lightblue", upper = "darkblue")
)
ggthemr(custom)
calculate_freq_thresh <- function(name_type,percentile){
//return(100)
if(name_type == "fname"){
freq <- fname_freq$n
freq = freq[freq>5]
return(quantile(freq,percentile))
} else {
lreq <- lname_freq$n
lreq = lreq[lreq>5]
return(quantile(lreq,percentile)  )
}
}
calculate_freq_thresh <- function(name_type,percentile){
# return(100)
if(name_type == "fname"){
freq <- fname_freq$n
freq = freq[freq>5]
return(quantile(freq,percentile))
} else {
lreq <- lname_freq$n
lreq = lreq[lreq>5]
return(quantile(lreq,percentile)  )
}
}
calculate_freq_thresh("fname",0.75)
ecdf(fname_freq,27)
f <- ecdf(fname_freq)
ecdf(fname_freq$n,27)
ecdf(fname_freq$n)
x <- ecdf(fname_freq$n)
x(27)
x <- ecdf(fname_freq$n)
x
x(0.5)
x(1)
x(2)
x(3)
x(100)
ecdf(fname_freq$n)(0.5)
calc_percentile <- function(x_vector,value){
x <- ecdf(x_vector)
return(x(value))
}
calculate_freq_thresh <- function(name_type,percentile){
arbitrary <- 100
if(name_type == "fname"){
freq <- fname_freq$n
freq = freq[freq>5]
print(calc_percentile(freq,arbitrary)    )
return(arbitrary)
return(quantile(freq,percentile))
} else {
lreq <- lname_freq$n
lreq = lreq[lreq>5]
print(calc_percentile(freq,arbitrary)    )
return(arbitrary)
return(quantile(lreq,percentile)  )
}
}
calculate_rarity <- function(frequency,name_type = "fname", percentile = 0.5) {
freq_threshold <- calculate_freq_thresh(name_type,percentile)
print(paste0("The threshold is ",freq_threshold))
frequency <- tibble(freq = frequency)
frequency %>%
mutate(rarity = as_factor(case_when(
freq == 1 ~ "Unique",
between(freq, 2, 5) ~ "Rare",
between(freq, 5, freq_threshold) ~ "Common",
freq>freq_threshold ~ "Frequent")),
rarity = fct_relevel(rarity, "Unique", "Rare", "Common", "Frequent")) %>%
pull(rarity) %>%
return()
}
fname_freq <-
fname_freq %>%
mutate(Rarity = calculate_rarity(n), name_type = "fname")
lname_freq <-
lname_freq %>%
mutate(Rarity = calculate_rarity(n), name_type = "lname")
calculate_freq_thresh <- function(name_type,percentile){
arbitrary <- 100
if(name_type == "fname"){
freq <- fname_freq$n
freq = freq[freq>5]
print(calc_percentile(freq,arbitrary)    )
return(arbitrary)
return(quantile(freq,percentile))
} else {
lreq <- lname_freq$n
lreq = lreq[lreq>5]
print(calc_percentile(lreq,arbitrary)    )
return(arbitrary)
return(quantile(lreq,percentile)  )
}
}
calculate_freq_thresh <- function(name_type,percentile){
arbitrary <- 14
if(name_type == "fname"){
freq <- fname_freq$n
freq = freq[freq>5]
print(calc_percentile(freq,arbitrary)    )
return(arbitrary)
return(quantile(freq,percentile))
} else {
lreq <- lname_freq$n
lreq = lreq[lreq>5]
print(calc_percentile(lreq,arbitrary)    )
return(arbitrary)
return(quantile(lreq,percentile)  )
}
}
fname_freq <-
fname_freq %>%
mutate(Rarity = calculate_rarity(n), name_type = "fname")
calculate_freq_thresh <- function(name_type,percentile){
arbitrary <- 100
if(name_type == "fname"){
freq <- fname_freq$n
print(calc_percentile(freq,arbitrary))
freq = freq[freq>5]
return(arbitrary)
return(quantile(freq,percentile))
} else {
lreq <- lname_freq$n
print(calc_percentile(lreq,arbitrary))
lreq = lreq[lreq>5]
return(arbitrary)
return(quantile(lreq,percentile)  )
}
}
fname_freq <-
fname_freq %>%
mutate(Rarity = calculate_rarity(n), name_type = "fname")
lname_freq <-
lname_freq %>%
mutate(Rarity = calculate_rarity(n), name_type = "lname")
# Chunk 1
library(tidyverse)
library(ggthemr)
library(ggvis)
library(forcats)
library(RColorBrewer)
setwd("C:/Users/gurud/Google Drive/Research Assistantship/seq/Gurudev Ilangovan/Record Linkage/userstudy/pipeline/frequencies/")
fname_freq <- read_csv("./fname_freq.csv")
lname_freq <- read_csv("./lname_freq.csv")
starred_data_all <- read_csv("../data_output/all_starred_race.csv")
fname_starred <-
starred_data_all %>%
select(`First Name`, n = FF)
lname_starred <-
starred_data_all %>%
select(`Last Name`, n = LF)
custom <- define_palette(
# swatch = c("black","blue","red","darkgreen","darkgrey","darkorange","pink"),
swatch = c("#000000", brewer.pal(5,"Set1")),
gradient = c(lower = "lightblue", upper = "darkblue")
)
ggthemr(custom)
# Chunk 2
calc_percentile <- function(x_vector,value){
x <- ecdf(x_vector)
return(x(value))
}
calculate_freq_thresh <- function(name_type,percentile){
arbitrary <- 100
if(name_type == "fname"){
freq <- fname_freq$n
print(calc_percentile(freq,arbitrary))
freq = freq[freq>5]
return(arbitrary)
return(quantile(freq,percentile))
} else {
lreq <- lname_freq$n
print(calc_percentile(lreq,arbitrary))
lreq = lreq[lreq>5]
return(arbitrary)
return(quantile(lreq,percentile)  )
}
}
calculate_rarity <- function(frequency,name_type = "fname", percentile = 0.5) {
freq_threshold <- calculate_freq_thresh(name_type,percentile)
print(paste0("The threshold is ",freq_threshold))
frequency <- tibble(freq = frequency)
frequency %>%
mutate(rarity = as_factor(case_when(
freq == 1 ~ "Unique",
between(freq, 2, 5) ~ "Rare",
between(freq, 5, freq_threshold) ~ "Often",
freq>freq_threshold ~ "Frequent")),
rarity = fct_relevel(rarity, "Unique", "Rare", "Often", "Frequent")) %>%
pull(rarity) %>%
return()
}
fname_freq <-
fname_freq %>%
mutate(Rarity = calculate_rarity(n), name_type = "fname")
lname_freq <-
lname_freq %>%
mutate(Rarity = calculate_rarity(n), name_type = "lname")
fname_starred <-
fname_starred %>%
mutate(Rarity = calculate_rarity(n), name_type = "fname")
lname_starred <-
lname_starred %>%
mutate(Rarity = calculate_rarity(n), name_type = "lname")
f_threshold <- calculate_freq_thresh("fname",0.5)
l_threshold <- calculate_freq_thresh("lname",0.5)
# Chunk 3
fname_freq %>%
mutate(src = ifelse(src == "B", "1703", "1304")) %>%
ggplot(aes(n)) +
facet_grid(~src) +
geom_histogram(binwidth = 10, aes(fill = Rarity), alpha = 0.75) + theme(legend.position="none")
# Chunk 4
lname_freq %>%
mutate(src = ifelse(src == "B", "1703", "1304")) %>%
ggplot(aes(n)) +
facet_grid(~src) +
geom_histogram(binwidth = 10, aes(fill = Rarity), alpha = 0.8) + theme(legend.position="none")
# Chunk 5
fname_starred %>%
ggplot(aes(n)) + geom_histogram(binwidth = 10,  alpha = 0.8, aes(fill = Rarity)) + theme(legend.position="none")
# Chunk 6
lname_starred %>%
ggplot(aes(n)) + geom_histogram(binwidth = 10,  alpha = 0.8, aes(fill = Rarity)) + theme(legend.position="none")
# Chunk 7
ggplot(fname_freq, aes(Rarity, fill = Rarity)) +
geom_bar(aes(y = 100 * (..count..)/sum(..count..)), alpha = 0.7) +
ylab("Percentage") + ggtitle("Lookup First Name") + theme(legend.position="none")
ggplot(fname_starred, aes(Rarity, fill = Rarity)) +
geom_bar(aes(y = 100 * (..count..)/sum(..count..)), alpha = 0.7) +
ylab("Percentage") + ggtitle("Starred First Name") + theme(legend.position="none")
ggplot(lname_freq, aes(Rarity, fill = Rarity)) +
geom_bar(aes(y = 100 * (..count..)/sum(..count..)), alpha = 0.7) +
ylab("Percentage") + ggtitle("Lookup Last Name") + theme(legend.position="none")
ggplot(lname_starred, aes(Rarity, fill = Rarity)) +
geom_bar(aes(y = 100 * (..count..)/sum(..count..)), alpha = 0.7) +
ylab("Percentage") + ggtitle("Starred Last Name") + theme(legend.position="none")
ggplot(lname_freq, aes(Rarity, fill = Rarity)) +
geom_bar(aes(y = 100 * (..count..)/sum(..count..)), alpha = 0.7) +
ylab("Percentage") + theme(legend.position="none")
