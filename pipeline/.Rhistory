starred_data_2 <-
starred_data_2 %>%
bind_rows(enc5)
starred_data_2 <- randomize_table(starred_data_2, T)
starred_data_2$n = NULL
names(starred_data_2) <- col_names
starred_data_2%>%
write_csv(paste0(sprintf("./data_output/samples/sample_%02d",1),".csv"))
library(dplyr)
library(readr)
library(magrittr)
library(stringr)
library(tidyverse)
question_types <- c(2,
8,
18,
22,
33,
27)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
col_names <- c("Group ID", "ID",
"FF", "First Name",
"Last Name", "LF",
"DoB", "Sex", "Race",
"Reg No.", "First Name", "Last Name",
"DoB", "Sex", "Race",
"Record ID", "type","Same")
(starred_data <- read_csv("./data_intermediate/all_starred_race_enc.csv",
col_types = cols(.default = "c", `Group ID` = "i")) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(src = str_extract(`Record ID`, "[AB]")) %>%
rename(fname = `First Name`,
lname = `Last Name`))
(starred_data <-
starred_data %>%
mutate(`Record ID` = str_extract(`Record ID`,"[0-9]+")))
starred_data <-
starred_data %>%
select(`Group ID`, `Reg No.`, FF, fname, lname, LF,
DoB,Sex, Race, `Reg No._1`, `First Name_1`, `Last Name_1`, DoB_1,Sex_1, Race_1,
`Record ID`, type, Same) %>%
arrange(as.numeric(`Group ID`))
starred_data %>%
select(`Group ID`,type,`Record ID`) %>%
group_by(type,`Record ID`) %>%
unique() %>% count(type,`Record ID`)
starred_data_2 <-
starred_data%>%
filter(as.numeric(`Record ID`)  %in% question_types)
page_numbers = c(1,2,3,4,5)
starred_data_2 <-
starred_data_2 %>%
group_by(`Record ID`) %>%
mutate(n = sort(rep(1:(n()/2),2))) %>%
select(n, everything()) %>%
ungroup() %>%
arrange(n , `Group ID`)  %>%
filter(n == 3)
starred_data_3 <- starred_data_2
starred_data_2 <- starred_data_3
randomize_table <- function(ord_tbl, sampling = T){
if(sampling){
gid <- ord_tbl %>% pull(`Group ID`) %>% unique() %>% base::sample(size = length(.), replace = F)
} else {
gid <- ord_tbl %>% pull(`Group ID`) %>% unique()
}
lookup <- tibble(`Group ID` = gid, n_ord = 1:length(gid))
if(sampling){
ord_tbl %>% left_join(lookup) %>% arrange(n_ord) %>% select(-n_ord)
} else {
ord_tbl %>% left_join(lookup) %>% mutate(`Group ID` = n_ord) %>% select(-n_ord)
}
}
starred_data_2 <- randomize_table(starred_data_2, F) %>%
select(-n)
names(starred_data_2) <- col_names
starred_data_2%>%
write_csv(paste0("./data_intermediate/enc_5",".csv"))
library(dplyr)
library(magrittr)
library(readr)
library(stringr)
library(tidyverse)
question_types <- c(2,
8,
18,
22,
33,
27)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
col_names <- c("Group ID", "ID",
"FF", "First Name",
"Last Name", "LF",
"DoB", "Sex", "Race",
"Reg No.", "First Name", "Last Name",
"DoB", "Sex", "Race",
"Record ID", "type","Same")
(starred_data <- read_csv("./data_intermediate/all_starred_race.csv",
col_types = cols(.default = "c", `Group ID` = "i")) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(src = str_extract(`Record ID`, "[AB]")) %>%
rename(fname = `First Name`,
lname = `Last Name`))
(starred_data <-
starred_data %>%
mutate(`Record ID` = str_extract(`Record ID`,"[0-9]+")))
starred_data <-
starred_data %>%
select(`Group ID`, `Reg No.`, FF, fname, lname, LF,
DoB,Sex, Race, `Reg No._1`, `First Name_1`, `Last Name_1`, DoB_1,Sex_1, Race_1,
`Record ID`, type, Same) %>%
arrange(as.numeric(`Group ID`))
starred_data %>%
select(`Group ID`,type,`Record ID`) %>%
group_by(type,`Record ID`) %>%
unique() %>% count(type,`Record ID`)
attention_test = c(1,7,13,19,25,31)
starred_data_2 <-
starred_data%>%
filter(as.numeric(`Record ID`)  %in% question_types)
page_numbers = c(1,2,3,4,5)
starred_data_2 <-
starred_data_2 %>%
group_by(`Record ID`) %>%
mutate(n = sort(rep(1:(n()/2),2))) %>%
select(n, everything()) %>%
ungroup() %>%
arrange(n , `Group ID`)  %>%
filter(n<6)
starred_data_3 <- starred_data_2
starred_data_2 <- starred_data_3
randomize_table <- function(ord_tbl, sampling = T){
if(sampling){
gid <-
ord_tbl %>%
select(n, type,`Group ID`) %>%
group_by(n, type) %>%
slice(1) %>%
ungroup() %>%
group_by(n) %>%
sample_n(6) %>%
pull(`Group ID`)
# gid <- ord_tbl %>% pull(`Group ID`) %>% unique() %>% base::sample(size = length(.), replace = F)
} else {
gid <- ord_tbl %>% pull(`Group ID`) %>% unique()
}
lookup <- tibble(`Group ID` = gid, n_ord = 1:length(gid))
if(sampling){
ord_tbl %>% left_join(lookup) %>% arrange(n_ord) %>% select(-n_ord)
} else {
ord_tbl %>% left_join(lookup) %>% mutate(`Group ID` = n_ord) %>% select(-n_ord)
}
}
enc5 <- read_csv("./data_intermediate/enc_5.csv", col_types = cols(.default = "c", `Group ID` = "i")) %>%
mutate(n = 6) %>%
select(n, everything())
enc5 <-
enc5 %>%
mutate_all(funs(ifelse(is_not_empty(.),.,"")))
names(enc5) <- names(starred_data_2)
starred_data_2 <-
starred_data_2 %>%
bind_rows(enc5)
starred_data_2 <- randomize_table(starred_data_2, T)
starred_data_2$n = NULL
starred_data_2 %>%
mutate(`Group ID` = sort(rep(1:(n()/2),2)))
names(starred_data_2) <- col_names
starred_data_2%>%
write_csv(paste0(sprintf("./data_output/samples/sample_%02d",1),".csv"))
library(dplyr)
library(readr)
library(magrittr)
library(stringr)
library(tidyverse)
question_types <- c(2,
8,
18,
22,
33,
27)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
col_names <- c("Group ID", "ID",
"FF", "First Name",
"Last Name", "LF",
"DoB", "Sex", "Race",
"Reg No.", "First Name", "Last Name",
"DoB", "Sex", "Race",
"Record ID", "type","Same")
(starred_data <- read_csv("./data_intermediate/all_starred_race.csv",
col_types = cols(.default = "c", `Group ID` = "i")) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(src = str_extract(`Record ID`, "[AB]")) %>%
rename(fname = `First Name`,
lname = `Last Name`))
(starred_data <-
starred_data %>%
mutate(`Record ID` = str_extract(`Record ID`,"[0-9]+")))
starred_data <-
starred_data %>%
select(`Group ID`, `Reg No.`, FF, fname, lname, LF,
DoB,Sex, Race, `Reg No._1`, `First Name_1`, `Last Name_1`, DoB_1,Sex_1, Race_1,
`Record ID`, type, Same) %>%
arrange(as.numeric(`Group ID`))
starred_data %>%
select(`Group ID`,type,`Record ID`) %>%
group_by(type,`Record ID`) %>%
unique() %>% count(type,`Record ID`)
attention_test = c(1,7,13,19,25,31)
starred_data_2 <-
starred_data%>%
filter(as.numeric(`Record ID`)  %in% question_types)
page_numbers = c(1,2,3,4,5)
starred_data_2 <-
starred_data_2 %>%
group_by(`Record ID`) %>%
mutate(n = sort(rep(1:(n()/2),2))) %>%
select(n, everything()) %>%
ungroup() %>%
arrange(n , `Group ID`)  %>%
filter(n<6)
starred_data_3 <- starred_data_2
starred_data_2 <- starred_data_3
randomize_table <- function(ord_tbl, sampling = T){
if(sampling){
gid <-
ord_tbl %>%
select(n, type,`Group ID`) %>%
group_by(n, type) %>%
slice(1) %>%
ungroup() %>%
group_by(n) %>%
sample_n(6) %>%
pull(`Group ID`)
# gid <- ord_tbl %>% pull(`Group ID`) %>% unique() %>% base::sample(size = length(.), replace = F)
} else {
gid <- ord_tbl %>% pull(`Group ID`) %>% unique()
}
lookup <- tibble(`Group ID` = gid, n_ord = 1:length(gid))
if(sampling){
ord_tbl %>% left_join(lookup) %>% arrange(n_ord) %>% select(-n_ord)
} else {
ord_tbl %>% left_join(lookup) %>% mutate(`Group ID` = n_ord) %>% select(-n_ord)
}
}
enc5 <- read_csv("./data_intermediate/enc_5.csv", col_types = cols(.default = "c", `Group ID` = "i")) %>%
mutate(n = 6) %>%
select(n, everything())
enc5 <-
enc5 %>%
mutate_all(funs(ifelse(is_not_empty(.),.,"")))
names(enc5) <- names(starred_data_2)
starred_data_2 <-
starred_data_2 %>%
bind_rows(enc5)
starred_data_2 <- randomize_table(starred_data_2, T)
starred_data_2$n = NULL
starred_data_2 <-
starred_data_2 %>%
mutate(`Group ID` = sort(rep(1:(n()/2),2)))
names(starred_data_2) <- col_names
starred_data_2%>%
write_csv(paste0(sprintf("./data_output/samples/sample_%02d",1),".csv"))
library(dplyr)
library(readr)
library(magrittr)
library(stringr)
library(tidyverse)
question_types <- c(2,
8,
18,
22,
33,
27)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
col_names <- c("Group ID", "ID",
"FF", "First Name",
"Last Name", "LF",
"DoB", "Sex", "Race",
"Reg No.", "First Name", "Last Name",
"DoB", "Sex", "Race",
"Record ID", "type","Same")
(starred_data <- read_csv("./data_intermediate/all_starred_race.csv",
col_types = cols(.default = "c", `Group ID` = "i")) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(src = str_extract(`Record ID`, "[AB]")) %>%
rename(fname = `First Name`,
lname = `Last Name`))
(starred_data <-
starred_data %>%
mutate(`Record ID` = str_extract(`Record ID`,"[0-9]+")))
starred_data <-
starred_data %>%
select(`Group ID`, `Reg No.`, FF, fname, lname, LF,
DoB,Sex, Race, `Reg No._1`, `First Name_1`, `Last Name_1`, DoB_1,Sex_1, Race_1,
`Record ID`, type, Same) %>%
arrange(as.numeric(`Group ID`))
starred_data %>%
select(`Group ID`,type,`Record ID`) %>%
group_by(type,`Record ID`) %>%
unique() %>% count(type,`Record ID`)
attention_test = c(1,7,13,19,25,31)
starred_data_2 <-
starred_data%>%
filter(as.numeric(`Record ID`)  %in% question_types)
page_numbers = c(1,2,3,4,5)
starred_data_2 <-
starred_data_2 %>%
group_by(`Record ID`) %>%
mutate(n = sort(rep(1:(n()/2),2))) %>%
select(n, everything()) %>%
ungroup() %>%
arrange(n , `Group ID`)  %>%
filter(n<6)
library(dplyr)
library(readr)
library(magrittr)
library(stringr)
library(tidyverse)
question_types <- c(2,
8,
18,
22,
33,
27)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
col_names <- c("Group ID", "ID",
"FF", "First Name",
"Last Name", "LF",
"DoB", "Sex", "Race",
"Reg No.", "First Name", "Last Name",
"DoB", "Sex", "Race",
"Record ID", "type","Same")
(starred_data <- read_csv("./data_intermediate/all_starred_race.csv",
col_types = cols(.default = "c", `Group ID` = "i")) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(src = str_extract(`Record ID`, "[AB]")) %>%
rename(fname = `First Name`,
lname = `Last Name`))
(starred_data <-
starred_data %>%
mutate(`Record ID` = str_extract(`Record ID`,"[0-9]+")))
starred_data <-
starred_data %>%
select(`Group ID`, `Reg No.`, FF, fname, lname, LF,
DoB,Sex, Race, `Reg No._1`, `First Name_1`, `Last Name_1`, DoB_1,Sex_1, Race_1,
`Record ID`, type, Same) %>%
arrange(as.numeric(`Group ID`))
starred_data %>%
select(`Group ID`,type,`Record ID`) %>%
group_by(type,`Record ID`) %>%
unique() %>% count(type,`Record ID`)
attention_test = c(1,7,13,19,25,31)
starred_data_2 <-
starred_data%>%
filter(as.numeric(`Record ID`)  %in% question_types)
page_numbers = c(1,2,3,4,5)
View(starred_data)
count(type)
starred_data_2 %>%   count(type)
starred_data_2 %>%  count(type) %>%
mutate(n = n/2)
starred_data_2 %>%  count(`Record ID`) %>%
mutate(n = n/2)
library(dplyr)
library(readr)
library(magrittr)
library(stringr)
library(tidyverse)
question_types <- c(2,
8,
18,
22,
33,
27)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
col_names <- c("Group ID", "ID",
"FF", "First Name",
"Last Name", "LF",
"DoB", "Sex", "Race",
"Reg No.", "First Name", "Last Name",
"DoB", "Sex", "Race",
"Record ID", "type","Same")
(starred_data <- read_csv("./data_intermediate/all_starred_race.csv",
col_types = cols(.default = "c", `Group ID` = "i")) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(src = str_extract(`Record ID`, "[AB]")) %>%
rename(fname = `First Name`,
lname = `Last Name`))
(starred_data <-
starred_data %>%
mutate(`Record ID` = str_extract(`Record ID`,"[0-9]+")))
starred_data <-
starred_data %>%
select(`Group ID`, `Reg No.`, FF, fname, lname, LF,
DoB,Sex, Race, `Reg No._1`, `First Name_1`, `Last Name_1`, DoB_1,Sex_1, Race_1,
`Record ID`, type, Same) %>%
arrange(as.numeric(`Group ID`))
starred_data %>%
select(`Group ID`,type,`Record ID`) %>%
group_by(type,`Record ID`) %>%
unique() %>% count(type,`Record ID`)
attention_test = c(1,7,13,19,25,31)
starred_data_2 <-
starred_data%>%
filter(as.numeric(`Record ID`)  %in% question_types)
page_numbers = c(1,2,3,4,5)
starred_data_2 <-
starred_data_2 %>%
group_by(`Record ID`) %>%
mutate(n = sort(rep(1:(n()/2),2))) %>%
select(n, everything()) %>%
ungroup() %>%
arrange(n , `Group ID`)  %>%
filter(n<6)
starred_data_3 <- starred_data_2
starred_data_2 <- starred_data_3
randomize_table <- function(ord_tbl, sampling = T){
if(sampling){
set.seed(1)
gid <-
ord_tbl %>%
select(n, type,`Group ID`) %>%
group_by(n, type) %>%
slice(1) %>%
ungroup() %>%
group_by(n) %>%
sample_n(6) %>%
pull(`Group ID`)
# gid <- ord_tbl %>% pull(`Group ID`) %>% unique() %>% base::sample(size = length(.), replace = F)
} else {
gid <- ord_tbl %>% pull(`Group ID`) %>% unique()
}
lookup <- tibble(`Group ID` = gid, n_ord = 1:length(gid))
if(sampling){
ord_tbl %>% left_join(lookup) %>% arrange(n_ord) %>% select(-n_ord)
} else {
ord_tbl %>% left_join(lookup) %>% mutate(`Group ID` = n_ord) %>% select(-n_ord)
}
}
enc5 <- read_csv("./data_intermediate/enc_5.csv", col_types = cols(.default = "c", `Group ID` = "i")) %>%
mutate(n = 6) %>%
select(n, everything())
enc5 <-
enc5 %>%
mutate_all(funs(ifelse(is_not_empty(.),.,"")))
names(enc5) <- names(starred_data_2)
starred_data_2 <-
starred_data_2 %>%
bind_rows(enc5)
starred_data_2 <- randomize_table(starred_data_2, T)
12*5
starred_data_2 %>%
count(type)
starred_data_2 %>%
count(`Group ID`)
View(starred_data_2)
count(`Record ID`)
starred_data_2 %>%
count(`Record ID`)
debug(randomize_table)
starred_data_2 <- randomize_table(starred_data_2, T)
starred_data_2 <- randomize_table(starred_data_2, T)
ord_table %>%
count(n,type)
ord_tbl %>%
count(n,type)
ord_tbl %>%
count(n,type) %>%
View
