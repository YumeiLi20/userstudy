group_by(type,`Record ID`) %>%
sample_n(1) %$%
`Group ID`)
(sample_i <-
starred_data %>% filter(`Group ID` %in% gids))
(gids_ordered <-
sample_i %>%
arrange(type) %>%
group_by(type) %>%
do(sample_n(.,size = nrow(.))) %$%
`Group ID` %>%
unique())
(lookup <- tibble(`Group ID` = gids_ordered) %>%
mutate(qnum = 1:n()))
sample_i %>%
left_join(lookup) %>%
mutate(`Group ID` = qnum) %>%
select(-qnum) %>%
arrange(type,`Group ID`) %>%
View()
names(sample_i) <- c("Group ID", "Record ID",
"First Name", "FF",
"Last Name", "LF",
"Reg No.", "DoB", "Race",
"First Name", "Last Name",
"Reg No.", "DoB", "Race",
"type","Answer")
set.seed(1)
for(i in 1:n_samples) {
(gids <-
starred_data %>%
group_by(type,`Record ID`) %>%
sample_n(1) %$%
`Group ID`)
(sample_i <-
starred_data %>% filter(`Group ID` %in% gids))
(gids_ordered <-
sample_i %>%
arrange(type) %>%
group_by(type) %>%
do(sample_n(.,size = nrow(.))) %$%
`Group ID` %>%
unique())
(lookup <- tibble(`Group ID` = gids_ordered) %>%
mutate(qnum = 1:n()))
sample_i <-
sample_i %>%
left_join(lookup) %>%
mutate(`Group ID` = qnum) %>%
select(-qnum) %>%
arrange(type,`Group ID`)
#make the names standard
names(sample_i) <- c("Group ID", "Record ID",
"First Name", "FF",
"Last Name", "LF",
"Reg No.", "DoB", "Race",
"First Name", "Last Name",
"Reg No.", "DoB", "Race",
"type","Answer")
sample_i %>%
write_csv(paste0(sprintf("./data_output/samples/sample_%02d",i),".csv"))
}
input_data
input_data %>%
group_by(ID) %>%
mutate(n = n()) %>%
filter(n == 2) %>%
select(-n) %>%
ungroup()
library(dplyr)
library(readr)
library(magrittr)
library(stringr)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
(source_data <- read_csv("data_input/all.csv",
col_types = cols(.default = "c")))
input_data <-
source_data %>%
mutate_each(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(last_name = str_c(last_name, name_sufx_cd, sep = " "),
file_id = str_c(src, file_id, sep = "-")) %>%
mutate_each(funs(str_trim(.))) %>%
select(ID, voter_reg_num, last_name, first_name, dob, race, type,
everything(), -name_sufx_cd,-src)
input_data <-
input_data %>%
group_by(ID) %>%
mutate(n = n()) %>%
filter(n == 2) %>%
select(-n) %>%
ungroup()
write_csv(input_data, "./data_intermediate/all_no_stars.csv")
library(dplyr)
library(readr)
library(magrittr)
library(stringr)
library(forcats)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
(starred_data <- read_csv("./data_output/all_starred_race.csv", col_types = cols(.default = "c")) %>%
mutate_each(funs(ifelse(is_not_empty(.),.,""))))
(lookup <- starred_data %>%
select(type,`Group ID`) %>%
unique() %>%
arrange(type,`Group ID`))
(starred_data <-
starred_data %>%
mutate(`Record ID` = str_extract(`Record ID`,"[0-9]+")))
set.seed(1)
for(i in 1:n_samples) {
(gids <-
starred_data %>%
group_by(type,`Record ID`) %>%
sample_n(1) %$%
`Group ID`)
(sample_i <-
starred_data %>% filter(`Group ID` %in% gids))
(gids_ordered <-
sample_i %>%
arrange(type) %>%
group_by(type) %>%
do(sample_n(.,size = nrow(.))) %$%
`Group ID` %>%
unique())
(lookup <- tibble(`Group ID` = gids_ordered) %>%
mutate(qnum = 1:n()))
sample_i <-
sample_i %>%
left_join(lookup) %>%
mutate(`Group ID` = qnum) %>%
select(-qnum) %>%
arrange(type,`Group ID`)
#make the names standard
names(sample_i) <- c("Group ID", "Record ID",
"First Name", "FF",
"Last Name", "LF",
"Reg No.", "DoB", "Race",
"First Name", "Last Name",
"Reg No.", "DoB", "Race",
"type","Answer")
sample_i %>%
write_csv(paste0(sprintf("./data_output/samples/sample_%02d",i),".csv"))
}
set.seed(1)
for(i in 1:n_samples) {
(gids <-
starred_data %>%
group_by(type,`Record ID`) %>%
sample_n(1) %$%
`Group ID`)
(sample_i <-
starred_data %>% filter(`Group ID` %in% gids))
(gids_ordered <-
sample_i %>%
arrange(type) %>%
group_by(type) %>%
do(sample_n(.,size = nrow(.))) %$%
`Group ID` %>%
unique())
(lookup <- tibble(`Group ID` = gids_ordered) %>%
mutate(qnum = 1:n()))
sample_i <-
sample_i %>%
left_join(lookup, by = `Group ID`) %>%
mutate(`Group ID` = qnum) %>%
select(-qnum) %>%
arrange(type,`Group ID`)
#make the names standard
names(sample_i) <- c("Group ID", "Record ID",
"First Name", "FF",
"Last Name", "LF",
"Reg No.", "DoB", "Race",
"First Name", "Last Name",
"Reg No.", "DoB", "Race",
"type","Answer")
sample_i %>%
write_csv(paste0(sprintf("./data_output/samples/sample_%02d",i),".csv"))
}
set.seed(1)
for(i in 1:n_samples) {
(gids <-
starred_data %>%
group_by(type,`Record ID`) %>%
sample_n(1) %$%
`Group ID`)
(sample_i <-
starred_data %>% filter(`Group ID` %in% gids))
(gids_ordered <-
sample_i %>%
arrange(type) %>%
group_by(type) %>%
do(sample_n(.,size = nrow(.))) %$%
`Group ID` %>%
unique())
(lookup <- tibble(`Group ID` = gids_ordered) %>%
mutate(qnum = 1:n()))
sample_i <-
sample_i %>%
left_join(lookup, by = `Group ID`) %>%
mutate(`Group ID` = qnum) %>%
select(-qnum) %>%
arrange(type,`Group ID`)
#make the names standard
names(sample_i) <- c("Group ID", "Record ID",
"First Name", "FF",
"Last Name", "LF",
"Reg No.", "DoB", "Race",
"First Name", "Last Name",
"Reg No.", "DoB", "Race",
"type","Answer")
sample_i %>%
write_csv(paste0(sprintf("./data_output/samples/sample_%02d",i),".csv"))
}
set.seed(1)
for(i in 1:n_samples) {
(gids <-
starred_data %>%
group_by(type,`Record ID`) %>%
sample_n(1) %$%
`Group ID`)
(sample_i <-
starred_data %>% filter(`Group ID` %in% gids))
(gids_ordered <-
sample_i %>%
arrange(type) %>%
group_by(type) %>%
do(sample_n(.,size = nrow(.))) %$%
`Group ID` %>%
unique())
(lookup <- tibble(`Group ID` = gids_ordered) %>%
mutate(qnum = 1:n()))
sample_i <-
sample_i %>%
left_join(lookup, by = "Group ID") %>%
mutate(`Group ID` = qnum) %>%
select(-qnum) %>%
arrange(type,`Group ID`)
#make the names standard
names(sample_i) <- c("Group ID", "Record ID",
"First Name", "FF",
"Last Name", "LF",
"Reg No.", "DoB", "Race",
"First Name", "Last Name",
"Reg No.", "DoB", "Race",
"type","Answer")
sample_i %>%
write_csv(paste0(sprintf("./data_output/samples/sample_%02d",i),".csv"))
}
input_data %>%
group_by(ID) %>%
mutate(n = n()) %>%
filter(n != 2) %>%
select(-n) %>%
ungroup()
library(dplyr)
library(readr)
library(magrittr)
library(stringr)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
(source_data <- read_csv("data_input/all.csv",
col_types = cols(.default = "c")))
input_data <-
source_data %>%
mutate_each(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(last_name = str_c(last_name, name_sufx_cd, sep = " "),
file_id = str_c(src, file_id, sep = "-")) %>%
mutate_each(funs(str_trim(.))) %>%
select(ID, voter_reg_num, last_name, first_name, dob, race, type,
everything(), -name_sufx_cd,-src)
input_data %>%
group_by(ID) %>%
mutate(n = n()) %>%
filter(n != 2) %>%
select(-n) %>%
ungroup()
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
(source_data <- read_csv("data_input/all.csv",
col_types = cols(.default = "c")))
input_data <-
source_data %>%
mutate_each(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(last_name = str_c(last_name, name_sufx_cd, sep = " "),
file_id = str_c(src, file_id, sep = "-")) %>%
mutate_each(funs(str_trim(.))) %>%
select(ID, voter_reg_num, last_name, first_name, dob, race, type,
everything(), -name_sufx_cd,-src)
input_data %>%
group_by(ID) %>%
mutate(n = n()) %>%
filter(n != 2) %>%
select(-n) %>%
ungroup()
input_data <-
input_data %>%
group_by(ID) %>%
mutate(n = n()) %>%
filter(n == 2) %>%
select(-n) %>%
ungroup()
write_csv(input_data, "./data_intermediate/all_no_stars.csv")
library(dplyr)
library(readr)
library(magrittr)
library(stringr)
library(forcats)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
(starred_data <- read_csv("./data_output/all_starred_race.csv", col_types = cols(.default = "c")) %>%
mutate_each(funs(ifelse(is_not_empty(.),.,""))))
(starred_data <-
starred_data %>%
mutate(`Record ID` = str_extract(`Record ID`,"[0-9]+")))
starred_data %>%
select(`Group ID`,type,`Record ID`) %>%
group_by(type,`Record ID`) %>%
unique() %>% count(type,`Record ID`)
set.seed(1)
for(i in 1:n_samples) {
(gids <-
starred_data %>%
group_by(type,`Record ID`) %>%
sample_n(1) %$%
`Group ID`)
(sample_i <-
starred_data %>% filter(`Group ID` %in% gids))
(gids_ordered <-
sample_i %>%
arrange(type) %>%
group_by(type) %>%
do(sample_n(.,size = nrow(.))) %$%
`Group ID` %>%
unique())
(lookup <- tibble(`Group ID` = gids_ordered) %>%
mutate(qnum = 1:n()))
sample_i <-
sample_i %>%
left_join(lookup, by = "Group ID") %>%
mutate(`Group ID` = qnum) %>%
select(-qnum) %>%
arrange(type,`Group ID`)
#make the names standard
names(sample_i) <- c("Group ID", "Record ID",
"First Name", "FF",
"Last Name", "LF",
"Reg No.", "DoB", "Race",
"First Name", "Last Name",
"Reg No.", "DoB", "Race",
"type","Answer")
sample_i %>%
write_csv(paste0(sprintf("./data_output/samples/sample_%02d",i),".csv"))
}
library(dplyr)
library(readr)
library(magrittr)
library(stringr)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
(source_data <- read_csv("data_input/all.csv",
col_types = cols(.default = "c")))
input_data <-
source_data %>%
mutate_each(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(last_name = str_c(last_name, name_sufx_cd, sep = " ")) %>%
mutate_each(funs(str_trim(.))) %>%
select(ID, voter_reg_num, last_name, first_name, dob, race, type,
everything(), -name_sufx_cd,-src)
input_data %>%
group_by(ID) %>%
mutate(n = n()) %>%
filter(n != 2) %>%
select(-n) %>%
ungroup()
input_data <-
input_data %>%
group_by(ID) %>%
mutate(n = n()) %>%
filter(n == 2) %>%
select(-n) %>%
ungroup()
write_csv(input_data, "./data_intermediate/all_no_stars.csv")
library(dplyr)
library(readr)
library(magrittr)
library(stringr)
library(forcats)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
(starred_data <- read_csv("./data_output/all_starred_race.csv", col_types = cols(.default = "c")) %>%
mutate_each(funs(ifelse(is_not_empty(.),.,""))))
(starred_data <-
starred_data %>%
mutate(`Record ID` = str_extract(`Record ID`,"[0-9]+")))
starred_data %>%
select(`Group ID`,type,`Record ID`) %>%
group_by(type,`Record ID`) %>%
unique() %>% count(type,`Record ID`)
set.seed(1)
for(i in 1:n_samples) {
(gids <-
starred_data %>%
group_by(type,`Record ID`) %>%
sample_n(1) %$%
`Group ID`)
(sample_i <-
starred_data %>% filter(`Group ID` %in% gids))
(gids_ordered <-
sample_i %>%
arrange(type) %>%
group_by(type) %>%
do(sample_n(.,size = nrow(.))) %$%
`Group ID` %>%
unique())
(lookup <- tibble(`Group ID` = gids_ordered) %>%
mutate(qnum = 1:n()))
sample_i <-
sample_i %>%
left_join(lookup, by = "Group ID") %>%
mutate(`Group ID` = qnum) %>%
select(-qnum) %>%
arrange(type,`Group ID`)
#make the names standard
names(sample_i) <- c("Group ID", "Record ID",
"First Name", "FF",
"Last Name", "LF",
"Reg No.", "DoB", "Race",
"First Name", "Last Name",
"Reg No.", "DoB", "Race",
"type","Answer")
sample_i %>%
write_csv(paste0(sprintf("./data_output/samples/sample_%02d",i),".csv"))
}
for(i in 1:10) {
(gids <-
starred_data %>%
group_by(type,`Record ID`) %>%
sample_n(1) %$%
`Group ID`)
(sample_i <-
starred_data %>% filter(`Group ID` %in% gids))
(gids_ordered <-
sample_i %>%
arrange(type) %>%
group_by(type) %>%
do(sample_n(.,size = nrow(.))) %$%
`Group ID` %>%
unique())
(lookup <- tibble(`Group ID` = gids_ordered) %>%
mutate(qnum = 1:n()))
sample_i <-
sample_i %>%
left_join(lookup, by = "Group ID") %>%
mutate(`Group ID` = qnum) %>%
select(-qnum) %>%
arrange(type,`Group ID`)
#make the names standard
names(sample_i) <- c("Group ID", "Record ID",
"First Name", "FF",
"Last Name", "LF",
"Reg No.", "DoB", "Race",
"First Name", "Last Name",
"Reg No.", "DoB", "Race",
"type","Answer")
sample_i %>%
write_csv(paste0(sprintf("./data_output/samples/sample_%02d",i),".csv"))
}
x <- c(3,2,2,5,1,1)
unique(x)
