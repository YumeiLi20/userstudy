"Last Name", "LF",
"DoB", "Sex", "Race",
"Reg No.", "First Name", "Last Name",
"DoB", "Sex", "Race",
"Record ID", "type","Same")
(starred_data <- read_csv("./data_intermediate/all_starred_race.csv", col_types = cols(.default = "c", `Group ID` = "i")) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(src = str_extract(`Record ID`, "[AB]")) %>%
rename(fname = `First Name`,
lname = `Last Name`))
View(starred_data)
(fname_freq <- read_csv("./frequencies/fname_freq.csv"))
(lname_freq <- read_csv("./frequencies/lname_freq.csv"))
starred_data <-
starred_data %>%
left_join(fname_freq, by = c("fname","src")) %>%
mutate(FF = ifelse(!is.na(n),n,1)) %>%
select(-n)
starred_data <-
starred_data %>%
left_join(lname_freq, by = c("lname","src")) %>%
mutate(LF = ifelse(!is.na(n),n,1)) %>%
select(-n)
(starred_data <-
starred_data %>%
mutate(`Record ID` = str_extract(`Record ID`,"[0-9]+")))
starred_data <-
starred_data %>%
select(`Group ID`, `Reg No.`, FF, fname, lname, LF,
DoB,Sex, Race, `Reg No._1`, `First Name_1`, `Last Name_1`, DoB_1,Sex_1, Race_1,
`Record ID`, type, Same) %>%
arrange(as.numeric(`Group ID`))
starred_data %>%
select(`Group ID`,type,`Record ID`) %>%
group_by(type,`Record ID`) %>%
unique() %>% count(type,`Record ID`)
set.seed(1)
library(dplyr)
library(readr)
library(magrittr)
library(stringr)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
(source_data <- read_csv("data_input/allg.csv",
col_types = cols(.default = "c")))
(input_data <-
source_data %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(last_name = str_c(last_name, name_sufx_cd, sep = " "),
file_id = str_c(file_id,"-",src)) %>%
mutate_all(funs(str_trim(.))) %>%
select(ID, voter_reg_num, last_name, first_name, dob,sex, race, type,
everything(), -name_sufx_cd,-src))
org_names <- c("file_id","voter_reg_num","last_name","first_name","dob","name_sufx_cd","type","ID","src","sex","race","answer")
lookup_2 <-
source_data %>%
select(ID) %>%
unique() %>%
mutate(n = 1:n())
library(dplyr)
library(readr)
library(magrittr)
library(stringr)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
(source_data <- read_csv("data_input/allg.csv",
col_types = cols(.default = "c")))
(input_data <-
source_data %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(last_name = str_c(last_name, name_sufx_cd, sep = " "),
file_id = str_c(file_id,"-",src)) %>%
mutate_all(funs(str_trim(.))) %>%
select(ID, voter_reg_num, last_name, first_name, dob,sex, race, type,
everything(), -name_sufx_cd,-src))
library(dplyr)
library(readr)
library(magrittr)
library(stringr)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
(source_data <- read_csv("data_input/allg.csv",
col_types = cols(.default = "c")))
(source_data <- read_csv("data_input/allg_freq.csv",
col_types = cols(.default = "c")))
(source_data <- read_csv("data_input/allg_freq.csv",
col_types = cols(.default = "c")))
(source_data <- read_csv("data_input/allg_freq.csv",
col_types = cols(.default = "c")))
(input_data <-
source_data %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(last_name = str_c(last_name, name_sufx_cd, sep = " "),
file_id = str_c(file_id,"-",src)) %>%
mutate_all(funs(str_trim(.))) %>%
select(ID, voter_reg_num, last_name, first_name, dob,sex, race, type,
everything(), -name_sufx_cd,-src))
View(input_data)
(input_data <-
source_data %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(last_name = str_c(last_name, name_sufx_cd, sep = " "),
file_id = str_c(file_id,"-",src)) %>%
mutate_all(funs(str_trim(.))) %>%
select(ID, voter_reg_num,first_name, last_name , dob,sex, race, type,
everything(), -name_sufx_cd,-src))
org_names <- c("file_id","voter_reg_num",
"cntfn","first_name","last_name","name_sufx_cd","cntln",
"dob","sex","race",
"type","ID","src","same")
lookup_2 <-
source_data %>%
select(ID) %>%
unique() %>%
mutate(n = 1:n())
source_data_2 <-
source_data %>%
left_join(lookup_2) %>%
mutate(ID = n) %>%
select(-n) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,"")))
names(source_data_2) <- org_names
write_csv(source_data_2,"./data_input/allg_id_ord.csv")
lookup <-
source_data %>%
select(ID) %>%
unique() %>%
mutate(n = 1:n())
input_data <-
input_data %>%
left_join(lookup) %>%
mutate(ID = n) %>%
select(-n)
input_data <-
input_data %>%
left_join(lookup, by = ID) %>%
mutate(ID = n) %>%
select(-n)
input_data <-
input_data %>%
left_join(lookup, by = "ID") %>%
mutate(ID = n) %>%
select(-n)
(input_data <-
source_data %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(last_name = str_c(last_name, name_sufx_cd, sep = " "),
file_id = str_c(file_id,"-",src)) %>%
mutate_all(funs(str_trim(.))) %>%
select(ID, voter_reg_num,first_name, last_name , dob,sex, race, type,
everything(), -name_sufx_cd,-src))
lookup <-
source_data %>%
select(ID) %>%
unique() %>%
mutate(n = 1:n())
input_data <-
input_data %>%
left_join(lookup, by = "ID") %>%
mutate(ID = n) %>%
select(-n)
input_data %>%
group_by(ID) %>%
mutate(n = n()) %>%
filter(n != 2) %>%
select(-n) %>%
ungroup()
input_data %>%
group_by(ID) %>%
mutate(n = n()) %>%
filter(n == 2) %>%
select(-n) %>%
ungroup()
input_data <-
input_data %>%
group_by(ID) %>%
mutate(n = n()) %>%
filter(n == 2) %>%
select(-n) %>%
ungroup()
write_csv(input_data, "./data_intermediate/all_no_stars.csv")
library(dplyr)
library(readr)
library(magrittr)
library(stringr)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
col_names <- c("Group ID", "Reg No.",
"FF", "First Name",
"Last Name", "LF",
"DoB", "Sex", "Race",
"Reg No.", "First Name", "Last Name",
"DoB", "Sex", "Race",
"Record ID", "type","Same")
(starred_data <- read_csv("./data_intermediate/all_starred_race.csv", col_types = cols(.default = "c", `Group ID` = "i")) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(src = str_extract(`Record ID`, "[AB]")) %>%
rename(fname = `First Name`,
lname = `Last Name`))
(starred_data <- read_csv("./data_intermediate/all_starred_race.csv", col_types = cols(.default = "c", `Group ID` = "i")) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(src = str_extract(`Record ID`, "[AB]")) %>%
rename(fname = `First Name`,
lname = `Last Name`))
(starred_data <- read_csv("./data_intermediate/all_starred_race.csv",
col_types = cols(.default = "c", `Group ID` = "i")) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(src = str_extract(`Record ID`, "[AB]")) %>%
rename(fname = `First Name`,
lname = `Last Name`))
(starred_data <- read_csv("./data_intermediate/all_starred_race.csv",
col_types = cols(.default = "c", `Group ID` = "i")) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(src = str_extract(`Record ID`, "[AB]")) %>%
rename(fname = `First Name`,
lname = `Last Name`))
View(starred_data)
(starred_data <-
starred_data %>%
mutate(`Record ID` = str_extract(`Record ID`,"[0-9]+")))
starred_data <-
starred_data %>%
select(`Group ID`, `Reg No.`, FF, fname, lname, LF,
DoB,Sex, Race, `Reg No._1`, `First Name_1`, `Last Name_1`, DoB_1,Sex_1, Race_1,
`Record ID`, type, Same) %>%
arrange(as.numeric(`Group ID`))
starred_data %>%
select(`Group ID`,type,`Record ID`) %>%
group_by(type,`Record ID`) %>%
unique() %>% count(type,`Record ID`)
starred_data %>%
select(`Group ID`,type,`Record ID`) %>%
group_by(type,`Record ID`) %>%
unique() %>% count(type,`Record ID`)
starred_data %>%
group_by(type,`Record ID`) %>%
sample_n(1) %$%
`Group ID`)
starred_data %>%
group_by(type,`Record ID`) %>%
sample_n(1) %$%
`Group ID`
View(starred_data)
(gids <-
starred_data %>%
group_by(type,`Record ID`) %>%
sample_n(1) %$%
`Group ID`)
(sample_i <-
starred_data %>% filter(`Group ID` %in% gids))
(lookup <- tibble(`Group ID` = gids_ordered) %>%
mutate(qnum = 1:n()))
(gids_ordered <-
sample_i %>%
arrange(type) %>%
group_by(type) %>%
do(sample_n(.,size = nrow(.))) %$%
`Group ID` %>%
unique())
(lookup <- tibble(`Group ID` = gids_ordered) %>%
mutate(qnum = 1:n()))
sample_i <-
sample_i %>%
left_join(lookup, by = "Group ID") %>%
mutate(`Group ID` = qnum) %>%
select(-qnum) %>%
arrange(type,`Group ID`)
section2  <-
starred_data %>%
filter(!(`Group ID` %in% gids))
View(section2)
names(sample_i) <- col_names
View(sample_i)
names(sample_i) <- col_names
View(sample_i)
source('F:/E-Books/Data Science/Github/pipeline_new/3_postprocessing.R', echo=TRUE)
section2  <-
starred_data %>%
filter(!(`Group ID` %in% gids))
(starred_data <- read_csv("./data_intermediate/all_starred_race.csv",
col_types = cols(.default = "c", `Group ID` = "i")) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(src = str_extract(`Record ID`, "[AB]")) %>%
rename(fname = `First Name`,
lname = `Last Name`))
(starred_data <-
starred_data %>%
mutate(`Record ID` = str_extract(`Record ID`,"[0-9]+")))
starred_data <-
starred_data %>%
select(`Group ID`, `Reg No.`, FF, fname, lname, LF,
DoB,Sex, Race, `Reg No._1`, `First Name_1`, `Last Name_1`, DoB_1,Sex_1, Race_1,
`Record ID`, type, Same) %>%
arrange(as.numeric(`Group ID`))
starred_data %>%
select(`Group ID`,type,`Record ID`) %>%
group_by(type,`Record ID`) %>%
unique() %>% count(type,`Record ID`)
set.seed(1)
i=1
(gids <-
starred_data %>%
group_by(type,`Record ID`) %>%
sample_n(1) %$%
`Group ID`)
(sample_i <-
starred_data %>% filter(`Group ID` %in% gids))
(gids_ordered <-
sample_i %>%
arrange(type) %>%
group_by(type) %>%
do(sample_n(.,size = nrow(.))) %$%
`Group ID` %>%
unique())
(lookup <- tibble(`Group ID` = gids_ordered) %>%
mutate(qnum = 1:n()))
sample_i <-
sample_i %>%
left_join(lookup, by = "Group ID") %>%
mutate(`Group ID` = qnum) %>%
select(-qnum) %>%
arrange(type,`Group ID`)
section2  <-
starred_data %>%
filter(!(`Group ID` %in% gids))
(gids_ordered2 <-
section2 %>%
arrange(type) %>%
group_by(type) %>%
do(sample_n(.,size = nrow(.))) %$%
`Group ID` %>%
unique())
(lookup2 <- tibble(`Group ID` = gids_ordered2) %>%
mutate(qnum = 1:n()))
section2 <-
section2 %>%
left_join(lookup, by = "Group ID") %>%
mutate(`Group ID` = qnum) %>%
select(-qnum) %>%
arrange(type,`Group ID`)
section2
section2 <-
section2 %>%
left_join(lookup2, by = "Group ID") %>%
mutate(`Group ID` = qnum) %>%
select(-qnum) %>%
arrange(type,`Group ID`)
section2
(lookup2 <- tibble(`Group ID` = gids_ordered2) %>%
mutate(qnum = 1:n()))
section2 <-
section2 %>%
left_join(lookup2, by = "Group ID") %>%
mutate(`Group ID` = qnum) %>%
select(-qnum) %>%
arrange(type,`Group ID`)
section2
gids_ordered2
(lookup2 <- tibble(`Group ID` = gids_ordered2) %>%
mutate(qnum = 1:n()))
View(lookup_2)
section2 %>%
left_join(lookup2, by = "Group ID") %>%
mutate(`Group ID` = qnum) %>%
select(-qnum) %>%
arrange(type,`Group ID`)
section2 %>%
left_join(lookup2, by = "Group ID")
section2  <-
starred_data %>%
filter(!(`Group ID` %in% gids))
section2
(gids_ordered2 <-
section2 %>%
arrange(type) %>%
group_by(type) %>%
do(sample_n(.,size = nrow(.))) %$%
`Group ID` %>%
unique())
(gids_ordered2 <-
section2 %>%
sample_n(.,size = nrow(.)) %$%
`Group ID` %>%
unique())
(lookup2 <- tibble(`Group ID` = gids_ordered2) %>%
mutate(qnum = 1:n()))
View(lookup_2)
section2 %>%
left_join(lookup2, by = "Group ID") %>%
mutate(`Group ID` = qnum) %>%
select(-qnum) %>%
arrange(type,`Group ID`
)
section2 <-
section2 %>%
left_join(lookup2, by = "Group ID") %>%
mutate(`Group ID` = qnum) %>%
select(-qnum) %>%
arrange(type,`Group ID`)
View(section2)
names(sample_i) <- col_names
names(section2) <- col_names
sample_i %>%
write_csv(paste0(sprintf("./data_output/samples/sample_%02d",i),".csv"))
section2 %>%
write_csv(paste0(sprintf("./data_output/samples/section2_%02d",i),".csv"))
source('F:/E-Books/Data Science/Github/pipeline_new/3_postprocessing.R', echo=TRUE)
library(dplyr)
library(readr)
library(magrittr)
library(stringr)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
(source_data <- read_csv("data_input/allv2.csv",
col_types = cols(.default = "c")))
(input_data <-
source_data %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(last_name = str_c(last_name, name_sufx_cd, sep = " "),
file_id = str_c(file_id,"-",src)) %>%
mutate_all(funs(str_trim(.))) %>%
select(ID, voter_reg_num,first_name, last_name , dob,sex, race, type,
everything(), -name_sufx_cd,-src))
org_names <- c("file_id","voter_reg_num",
"cntfn","first_name","last_name","name_sufx_cd","cntln",
"dob","sex","race",
"type","ID","src","same")
lookup <-
source_data %>%
select(ID) %>%
unique() %>%
mutate(n = 1:n())
source_data_2 <-
source_data %>%
left_join(lookup_2) %>%
mutate(ID = n) %>%
select(-n) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,"")))
source_data_2 <-
source_data %>%
left_join(lookup) %>%
mutate(ID = n) %>%
select(-n) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,"")))
names(source_data_2) <- org_names
write_csv(source_data_2,"./data_input/allg_id_ord.csv")
input_data <-
input_data %>%
left_join(lookup, by = "ID") %>%
mutate(ID = n) %>%
select(-n)
input_data %>%
group_by(ID) %>%
mutate(n = n()) %>%
filter(n != 2) %>%
select(-n) %>%
ungroup()
input_data <-
input_data %>%
group_by(ID) %>%
mutate(n = n()) %>%
filter(n == 2) %>%
ungroup()
input_data <-
input_data %>%
group_by(ID) %>%
mutate(n = n()) %>%
filter(n == 2) %>%
select(-n) %>%
ungroup()
write_csv(input_data, "./data_intermediate/all_no_stars.csv")
library(dplyr)
library(readr)
library(magrittr)
library(stringr)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
