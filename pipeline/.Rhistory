(fname_freq <- read_csv("./frequencies/fname_freq.csv") %>%
rename(`First Name` = fname))
(lname_freq <- read_csv("./frequencies/lname_freq.csv") %>%
rename(`Last Name` = lname))
starred_data <-
starred_data %>%
select(`Group ID`, `Reg No.`, FF, `First Name`, `Last Name`, LF,
DoB, Race, `Reg No._1`, `First Name_1`, `Last Name_1`, DoB_1, Race_1,
`Record ID`, type, Same) %>%
arrange(as.numeric(`Group ID`))
starred_data <-
starred_data %>%
left_join(fname_freq) %>%
mutate(FF = ifelse(!is.na(n),n,1)) %>%
select(-n)
starred_data <-
starred_data %>%
left_join(lname_freq, by(`First Name`, src)) %>%
mutate(LF = ifelse(!is.na(n),n,1)) %>%
select(-n)
starred_data <-
starred_data %>%
left_join(lname_freq, by("First Name", "src")) %>%
mutate(LF = ifelse(!is.na(n),n,1)) %>%
select(-n)
starred_data %>%
left_join(lname_freq, by("First Name", "src"))
starred_data <-
starred_data %>%
left_join(lname_freq, by("`First Name`", "src")) %>%
mutate(LF = ifelse(!is.na(n),n,1)) %>%
select(-n)
(fname_freq <- read_csv("./frequencies/fname_freq.csv"))
(lname_freq <- read_csv("./frequencies/lname_freq.csv"))
starred_data <-
starred_data %>%
select(`Group ID`, `Reg No.`, FF, fname = `First Name`, lname = `Last Name`, LF,
DoB, Race, `Reg No._1`, `First Name_1`, `Last Name_1`, DoB_1, Race_1,
`Record ID`, type, Same) %>%
arrange(as.numeric(`Group ID`))
starred_data <-
starred_data %>%
left_join(fname_freq) %>%
mutate(FF = ifelse(!is.na(n),n,1)) %>%
select(-n)
starred_data <-
starred_data %>%
left_join(fname_freq, by = c("fname","src")) %>%
mutate(FF = ifelse(!is.na(n),n,1)) %>%
select(-n)
View(starred_data)
(starred_data <- read_csv("./data_output/all_starred_race.csv", col_types = cols(.default = "c")) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(src = str_extract(`Record ID`, "[AB]")))
(starred_data <- read_csv("./data_output/all_starred_race.csv", col_types = cols(.default = "c", `Group ID` = "i")) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(src = str_extract(`Record ID`, "[AB]")))
View(starred_data)
(fname_freq <- read_csv("./frequencies/fname_freq.csv"))
(lname_freq <- read_csv("./frequencies/lname_freq.csv"))
starred_data <-
starred_data %>%
select(`Group ID`, `Reg No.`, FF, fname = `First Name`, lname = `Last Name`, LF,
DoB, Race, `Reg No._1`, `First Name_1`, `Last Name_1`, DoB_1, Race_1,
`Record ID`, type, Same) %>%
arrange(as.numeric(`Group ID`))
starred_data %>%
left_join(fname_freq, by = c("fname","src")) %>%
mutate(FF = ifelse(!is.na(n),n,1)) %>%
select(-n) %>%
View()
(starred_data <- read_csv("./data_output/all_starred_race.csv", col_types = cols(.default = "c", `Group ID` = "i")) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(src = str_extract(`Record ID`, "[AB]")))
(fname_freq <- read_csv("./frequencies/fname_freq.csv"))
(lname_freq <- read_csv("./frequencies/lname_freq.csv"))
starred_data <-
starred_data %>%
left_join(fname_freq, by = c("fname","src")) %>%
mutate(FF = ifelse(!is.na(n),n,1)) %>%
select(-n) %>%
View()
(starred_data <- read_csv("./data_output/all_starred_race.csv", col_types = cols(.default = "c", `Group ID` = "i")) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(src = str_extract(`Record ID`, "[AB]")) %>%
rename(fname = `First Name`,
lname = `Last Name`))
(fname_freq <- read_csv("./frequencies/fname_freq.csv"))
(lname_freq <- read_csv("./frequencies/lname_freq.csv"))
starred_data %>%
left_join(fname_freq, by = c("fname","src")) %>%
mutate(FF = ifelse(!is.na(n),n,1)) %>%
select(-n) %>%
View()
starred_data <-
starred_data %>%
left_join(lname_freq, by("lname","src")) %>%
mutate(LF = ifelse(!is.na(n),n,1)) %>%
select(-n)
(lname_freq <- read_csv("./frequencies/lname_freq.csv"))
View(starred_data)
starred_data <-
starred_data %>%
left_join(lname_freq, by = c("lname","src")) %>%
mutate(LF = ifelse(!is.na(n),n,1)) %>%
select(-n)
View(fname_freq)
fname_freq
View(fname_freq)
(fname_freq <- read_csv("./frequencies/fname_freq.csv"))
(lname_freq <- read_csv("./frequencies/lname_freq.csv"))
View(fname_freq)
View(starred_data)
starred_data <-
starred_data %>%
left_join(fname_freq, by = c("fname","src")) %>%
mutate(FF = ifelse(!is.na(n),n,1)) %>%
select(-n)
starred_data <-
starred_data %>%
left_join(lname_freq, by = c("lname","src")) %>%
mutate(LF = ifelse(!is.na(n),n,1)) %>%
select(-n)
(starred_data <-
starred_data %>%
mutate(`Record ID` = str_extract(`Record ID`,"[0-9]+")))
starred_data <-
starred_data %>%
select(`Group ID`, `Reg No.`, FF, fname, lname, LF,
DoB, Race, `Reg No._1`, `First Name_1`, `Last Name_1`, DoB_1, Race_1,
`Record ID`, type, Same) %>%
arrange(as.numeric(`Group ID`))
starred_data %>%
select(`Group ID`,type,`Record ID`) %>%
group_by(type,`Record ID`) %>%
unique() %>% count(type,`Record ID`)
set.seed(1)
for(i in 1:10) {
(gids <-
starred_data %>%
group_by(type,`Record ID`) %>%
sample_n(1) %$%
`Group ID`)
(sample_i <-
starred_data %>% filter(`Group ID` %in% gids))
(gids_ordered <-
sample_i %>%
arrange(type) %>%
group_by(type) %>%
do(sample_n(.,size = nrow(.))) %$%
`Group ID` %>%
unique())
(lookup <- tibble(`Group ID` = gids_ordered) %>%
mutate(qnum = 1:n()))
sample_i <-
sample_i %>%
left_join(lookup, by = "Group ID") %>%
mutate(`Group ID` = qnum) %>%
select(-qnum) %>%
arrange(type,`Group ID`)
#make the names standard
names(sample_i) <- col_names
sample_i %>%
write_csv(paste0(sprintf("./data_output/samples/sample_%02d",i),".csv"))
}
names(starred_data) <- col_names
write_csv(starred_data,"./data_output/all_starred_race.csv")
library(readr)
library(dplyr)
library(ggplot2)
name_tbl <- read_csv("./nmfreq.csv") %>%
mutate(src = ifelse(src == 1703, "B", "A"))
library(dplyr)
library(readr)
library(magrittr)
library(stringr)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
(source_data <- read_csv("data_input/allg.csv",
col_types = cols(.default = "c")))
(input_data <-
source_data %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(last_name = str_c(last_name, name_sufx_cd, sep = " "),
file_id = str_c(file_id,"-",src)) %>%
mutate_all(funs(str_trim(.))) %>%
select(ID, voter_reg_num, last_name, first_name, dob,sex, race, type,
everything(), -name_sufx_cd,-src))
org_names <- c("file_id","voter_reg_num","last_name","first_name","dob","name_sufx_cd","type","ID","src","sex","race","answer")
lookup_2 <-
source_data %>%
select(ID) %>%
unique() %>%
mutate(n = 1:n())
source_data_2 <-
source_data %>%
left_join(lookup_2) %>%
mutate(ID = n) %>%
select(-n) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,"")))
names(source_data_2) <- org_names
write_csv(source_data_2,"./data_input/all_groups_changed.csv")
lookup <-
input_data %>%
select(ID) %>%
unique() %>%
mutate(n = 1:n())
input_data <-
input_data %>%
left_join(lookup) %>%
mutate(ID = n) %>%
select(-n)
input_data %>%
group_by(ID) %>%
mutate(n = n()) %>%
filter(n != 2) %>%
select(-n) %>%
ungroup()
input_data <-
input_data %>%
group_by(ID) %>%
mutate(n = n()) %>%
filter(n == 2) %>%
select(-n) %>%
ungroup()
write_csv(input_data, "./data_intermediate/all_no_stars.csv")
library(dplyr)
library(readr)
library(magrittr)
library(stringr)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
(source_data <- read_csv("data_input/allg.csv",
col_types = cols(.default = "c")))
(input_data <-
source_data %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(last_name = str_c(last_name, name_sufx_cd, sep = " "),
file_id = str_c(file_id,"-",src)) %>%
mutate_all(funs(str_trim(.))) %>%
select(ID, voter_reg_num, last_name, first_name, dob,sex, race, type,
everything(), -name_sufx_cd,-src))
org_names <- c("file_id","voter_reg_num","last_name","first_name","dob","name_sufx_cd","type","ID","src","sex","race","answer")
lookup_2 <-
source_data %>%
select(ID) %>%
unique() %>%
mutate(n = 1:n())
source_data_2 <-
source_data %>%
left_join(lookup_2) %>%
mutate(ID = n) %>%
select(-n) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,"")))
names(source_data_2) <- org_names
write_csv(source_data_2,"./data_input/allg_id_ord.csv")
lookup <-
input_data %>%
select(ID) %>%
unique() %>%
mutate(n = 1:n())
input_data <-
input_data %>%
left_join(lookup) %>%
mutate(ID = n) %>%
select(-n)
input_data %>%
group_by(ID) %>%
mutate(n = n()) %>%
filter(n != 2) %>%
select(-n) %>%
ungroup()
input_data <-
input_data %>%
group_by(ID) %>%
mutate(n = n()) %>%
filter(n == 2) %>%
select(-n) %>%
ungroup()
write_csv(input_data, "./data_intermediate/all_no_stars.csv")
library(dplyr)
library(readr)
library(magrittr)
library(stringr)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
col_names <- c("Group ID", "Reg No.",
"FF", "First Name",
"Last Name", "LF",
"DoB", "Sex", "Race",
"Reg No.", "First Name", "Last Name",
"DoB", "Sex", "Race",
"Record ID", "type","Same")
(starred_data <- read_csv("./data_intermediate/all_starred_race.csv", col_types = cols(.default = "c", `Group ID` = "i")) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(src = str_extract(`Record ID`, "[AB]")) %>%
rename(fname = `First Name`,
lname = `Last Name`))
(fname_freq <- read_csv("./frequencies/fname_freq.csv"))
(lname_freq <- read_csv("./frequencies/lname_freq.csv"))
starred_data <-
starred_data %>%
left_join(fname_freq, by = c("fname","src")) %>%
mutate(FF = ifelse(!is.na(n),n,1)) %>%
select(-n)
starred_data <-
starred_data %>%
left_join(lname_freq, by = c("lname","src")) %>%
mutate(LF = ifelse(!is.na(n),n,1)) %>%
select(-n)
(starred_data <-
starred_data %>%
mutate(`Record ID` = str_extract(`Record ID`,"[0-9]+")))
starred_data <-
starred_data %>%
select(`Group ID`, `Reg No.`, FF, fname, lname, LF,
DoB,Sex, Race, `Reg No._1`, `First Name_1`, `Last Name_1`, DoB_1,Sex_1, Race_1,
`Record ID`, type, Same) %>%
arrange(as.numeric(`Group ID`))
starred_data %>%
select(`Group ID`,type,`Record ID`) %>%
group_by(type,`Record ID`) %>%
unique() %>% count(type,`Record ID`)
View(starred_data)
set.seed(1)
for(i in 1:10) {
(gids <-
starred_data %>%
group_by(type,`Record ID`) %>%
sample_n(1) %$%
`Group ID`)
(sample_i <-
starred_data %>% filter(`Group ID` %in% gids))
(gids_ordered <-
sample_i %>%
arrange(type) %>%
group_by(type) %>%
do(sample_n(.,size = nrow(.))) %$%
`Group ID` %>%
unique())
(lookup <- tibble(`Group ID` = gids_ordered) %>%
mutate(qnum = 1:n()))
sample_i <-
sample_i %>%
left_join(lookup, by = "Group ID") %>%
mutate(`Group ID` = qnum) %>%
select(-qnum) %>%
arrange(type,`Group ID`)
#make the names standard
names(sample_i) <- col_names
sample_i %>%
write_csv(paste0(sprintf("./data_output/samples/sample_%02d",i),".csv"))
}
library(dplyr)
library(readr)
library(magrittr)
library(stringr)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
(source_data <- read_csv("data_input/allg.csv",
col_types = cols(.default = "c")))
(input_data <-
source_data %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(last_name = str_c(last_name, name_sufx_cd, sep = " "),
file_id = str_c(file_id,"-",src)) %>%
mutate_all(funs(str_trim(.))) %>%
select(ID, voter_reg_num, last_name, first_name, dob,sex, race, type,
everything(), -name_sufx_cd,-src))
org_names <- c("file_id","voter_reg_num","last_name","first_name","dob","name_sufx_cd","type","ID","src","sex","race","answer")
lookup_2 <-
source_data %>%
select(ID) %>%
unique() %>%
mutate(n = 1:n())
source_data_2 <-
source_data %>%
left_join(lookup_2) %>%
mutate(ID = n) %>%
select(-n) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,"")))
source_data_2
input_data
source_data
(source_data <- read_csv("data_input/allg.csv",
col_types = cols(.default = "c")))
View(source_data)
library(dplyr)
library(readr)
library(magrittr)
library(stringr)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
col_names <- c("Group ID", "Reg No.",
"FF", "First Name",
"Last Name", "LF",
"DoB", "Sex", "Race",
"Reg No.", "First Name", "Last Name",
"DoB", "Sex", "Race",
"Record ID", "type","Same")
(starred_data <- read_csv("./data_intermediate/all_starred_race.csv", col_types = cols(.default = "c", `Group ID` = "i")) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(src = str_extract(`Record ID`, "[AB]")) %>%
rename(fname = `First Name`,
lname = `Last Name`))
View(starred_data)
(fname_freq <- read_csv("./frequencies/fname_freq.csv"))
(lname_freq <- read_csv("./frequencies/lname_freq.csv"))
starred_data <-
starred_data %>%
left_join(fname_freq, by = c("fname","src")) %>%
mutate(FF = ifelse(!is.na(n),n,1)) %>%
select(-n)
starred_data <-
starred_data %>%
left_join(lname_freq, by = c("lname","src")) %>%
mutate(LF = ifelse(!is.na(n),n,1)) %>%
select(-n)
(starred_data <-
starred_data %>%
mutate(`Record ID` = str_extract(`Record ID`,"[0-9]+")))
starred_data <-
starred_data %>%
select(`Group ID`, `Reg No.`, FF, fname, lname, LF,
DoB,Sex, Race, `Reg No._1`, `First Name_1`, `Last Name_1`, DoB_1,Sex_1, Race_1,
`Record ID`, type, Same) %>%
arrange(as.numeric(`Group ID`))
starred_data %>%
select(`Group ID`,type,`Record ID`) %>%
group_by(type,`Record ID`) %>%
unique() %>% count(type,`Record ID`)
set.seed(1)
library(dplyr)
library(readr)
library(magrittr)
library(stringr)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
(source_data <- read_csv("data_input/allg.csv",
col_types = cols(.default = "c")))
(input_data <-
source_data %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(last_name = str_c(last_name, name_sufx_cd, sep = " "),
file_id = str_c(file_id,"-",src)) %>%
mutate_all(funs(str_trim(.))) %>%
select(ID, voter_reg_num, last_name, first_name, dob,sex, race, type,
everything(), -name_sufx_cd,-src))
org_names <- c("file_id","voter_reg_num","last_name","first_name","dob","name_sufx_cd","type","ID","src","sex","race","answer")
lookup_2 <-
source_data %>%
select(ID) %>%
unique() %>%
mutate(n = 1:n())
library(dplyr)
library(readr)
library(magrittr)
library(stringr)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
(source_data <- read_csv("data_input/allg.csv",
col_types = cols(.default = "c")))
(input_data <-
source_data %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(last_name = str_c(last_name, name_sufx_cd, sep = " "),
file_id = str_c(file_id,"-",src)) %>%
mutate_all(funs(str_trim(.))) %>%
select(ID, voter_reg_num, last_name, first_name, dob,sex, race, type,
everything(), -name_sufx_cd,-src))
