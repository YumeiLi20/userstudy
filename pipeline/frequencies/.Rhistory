for (i in (1:len2)+1) { #string starts at 2nd row
for (j in (1:len1)+1) { #string starts at 2nd column
frpi = D[i-1,j] + 1
frpj = D[i,j-1] + 1
frpij = D[i-1,j-1] + ifelse(spstr1[j-1]!=spstr2[i-1],1,0)
D[i,j] = min(frpi,frpj,frpij) #get the minimum value of three:frpi, frpj, frpij
if (i>2 && j>2 && spstr1[j-1]==spstr2[i-2] && spstr1[j-2]==spstr2[i-1]) {
fr2pij = D[i-2,j-2] + 1
D[i,j] = min(D[i,j], fr2pij) #transposition
}
}
}
str1 = paste0(" ",str1)
str2 = paste0(" ",str2)
colnames(D) <- strsplit(str1,"")[[1]]
rownames(D) <- strsplit(str2,"")[[1]]
print(D)
return(D[len2+1,len1+1]) #get damerau-levenshtein distance: i from str2, j from str1
}
d.dist("YOUNG", "YOUNG JR")
d.dist("6308928261", "6309688262") #correct answer=1
calculate_rarity = function(frequency) {
print(as.character(frequency))
frequency = tibble(freq = frequency)
frequency %>%
mutate(rarity = as_factor(case_when(
freq == 1 ~ "Unique",
between(freq, 2, 5) ~ "Rare",
between(freq, 5, 10) ~ "Common",
freq>10 ~ "Frequent")),
rarity = fct_relevel(rarity, "Unique", "Rare", "Common", "Frequent")) %>%
pull(rarity) %>%
return()
}
fname_freq <-
fname_freq %>%
mutate(Rarity = calculate_rarity(n))
library(tidyverse)
library(ggthemr)
library(ggvis)
library(forcats)
calculate_rarity = function(frequency) {
print(as.character(frequency))
frequency = tibble(freq = frequency)
frequency %>%
mutate(rarity = as_factor(case_when(
freq == 1 ~ "Unique",
between(freq, 2, 5) ~ "Rare",
between(freq, 5, 10) ~ "Common",
freq>10 ~ "Frequent")),
rarity = fct_relevel(rarity, "Unique", "Rare", "Common", "Frequent")) %>%
pull(rarity) %>%
return()
}
fname_freq <-
fname_freq %>%
mutate(Rarity = calculate_rarity(n))
setwd("C:/Users/gurud/Google Drive/Research Assistantship/seq/Gurudev Ilangovan/Record Linkage/userstudy/pipeline/frequencies/")
fname_freq <- read_csv("./fname_freq.csv")
lname_freq <- read_csv("./lname_freq.csv")
starred_data_all <- read_csv("../data_output/all_starred_race.csv")
fname_starred <-
starred_data_all %>%
select(`First Name`, n = FF)
lname_starred <-
starred_data_all %>%
select(`Last Name`, n = LF)
custom <- define_palette(
swatch = c("black","blue","red","darkgreen","darkgrey","darkorange","pink"),
gradient = c(lower = "lightblue", upper = "darkblue")
)
ggthemr(custom)
calculate_rarity = function(frequency) {
print(as.character(frequency))
frequency = tibble(freq = frequency)
frequency %>%
mutate(rarity = as_factor(case_when(
freq == 1 ~ "Unique",
between(freq, 2, 5) ~ "Rare",
between(freq, 5, 10) ~ "Common",
freq>10 ~ "Frequent")),
rarity = fct_relevel(rarity, "Unique", "Rare", "Common", "Frequent")) %>%
pull(rarity) %>%
return()
}
fname_freq <-
fname_freq %>%
mutate(Rarity = calculate_rarity(n))
fname_freq <-
fname_freq %>%
mutate(Rarity = calculate_rarity(n))
fname_freq
quantile(fname_freq$n,0.5)
freq <- fname_freq$n
freq = freq[freq>5]
freq_threshold <- quantile(freq,0.5)
install.packages("glue")
install.packages("glue")
library(glue)
freq <- fname_freq$n
freq = freq[freq>5]
freq_threshold <- quantile(freq,percentile)
print(paste0("The threshold is ",freq_threshold))
lreq <- lname_freq$n
lreq = lreq[lreq>5]
freq_threshold <- quantile(lreq,percentile)
print(paste0("The threshold is ",freq_threshold))
percentile = 0.5
lreq <- lname_freq$n
lreq = lreq[lreq>5]
freq_threshold <- quantile(lreq,percentile)
print(paste0("The threshold is ",freq_threshold))
freq <- fname_freq$n
freq = freq[freq>5]
freq_threshold <- quantile(freq,percentile)
print(paste0("The threshold is ",freq_threshold))
lreq <- lname_freq$n
lreq = lreq[lreq>5]
freq_threshold <- quantile(lreq,percentile)
print(paste0("The threshold is ",freq_threshold))
length(lreq)
length(freq)
calculate_rarity = function(frequency,name_type = c("fname","lname", percentile = 0.5)) {
if(name_type == "fname"){
freq <- fname_freq$n
freq = freq[freq>5]
freq_threshold <- quantile(freq,percentile)
print(paste0("The threshold is ",freq_threshold))
} else {
lreq <- lname_freq$n
lreq = lreq[lreq>5]
freq_threshold <- quantile(lreq,percentile)
print(paste0("The threshold is ",freq_threshold))
}
frequency <- tibble(freq = frequency)
frequency %>%
mutate(rarity = as_factor(case_when(
freq == 1 ~ "Unique",
between(freq, 2, 5) ~ "Rare",
between(freq, 5, freq_threshold) ~ "Common",
freq>freq_threshold ~ "Frequent")),
rarity = fct_relevel(rarity, "Unique", "Rare", "Common", "Frequent")) %>%
pull(rarity) %>%
return()
}
fname_freq <-
fname_freq %>%
mutate(Rarity = calculate_rarity(n))
fname_freq <-
fname_freq %>%
mutate(Rarity = calculate_rarity(n), name_type = "fname")
calculate_rarity = function(frequency,name_type = c("fname","lname"), percentile = 0.5) {
if(name_type == "fname"){
freq <- fname_freq$n
freq = freq[freq>5]
freq_threshold <- quantile(freq,percentile)
print(paste0("The threshold is ",freq_threshold))
} else {
lreq <- lname_freq$n
lreq = lreq[lreq>5]
freq_threshold <- quantile(lreq,percentile)
print(paste0("The threshold is ",freq_threshold))
}
frequency <- tibble(freq = frequency)
frequency %>%
mutate(rarity = as_factor(case_when(
freq == 1 ~ "Unique",
between(freq, 2, 5) ~ "Rare",
between(freq, 5, freq_threshold) ~ "Common",
freq>freq_threshold ~ "Frequent")),
rarity = fct_relevel(rarity, "Unique", "Rare", "Common", "Frequent")) %>%
pull(rarity) %>%
return()
}
fname_freq <-
fname_freq %>%
mutate(Rarity = calculate_rarity(n), name_type = "fname")
fname_freq <-
fname_freq %>%
mutate(Rarity = calculate_rarity(n), name_type = "fname")
calculate_rarity = function(frequency,name_type = "fname", percentile = 0.5) {
if(name_type == "fname"){
freq <- fname_freq$n
freq = freq[freq>5]
freq_threshold <- quantile(freq,percentile)
print(paste0("The threshold is ",freq_threshold))
} else {
lreq <- lname_freq$n
lreq = lreq[lreq>5]
freq_threshold <- quantile(lreq,percentile)
print(paste0("The threshold is ",freq_threshold))
}
frequency <- tibble(freq = frequency)
frequency %>%
mutate(rarity = as_factor(case_when(
freq == 1 ~ "Unique",
between(freq, 2, 5) ~ "Rare",
between(freq, 5, freq_threshold) ~ "Common",
freq>freq_threshold ~ "Frequent")),
rarity = fct_relevel(rarity, "Unique", "Rare", "Common", "Frequent")) %>%
pull(rarity) %>%
return()
}
fname_freq <-
fname_freq %>%
mutate(Rarity = calculate_rarity(n), name_type = "fname")
lname_freq <-
lname_freq %>%
mutate(Rarity = calculate_rarity(n), name_type = "lname")
fname_starred <-
fname_starred %>%
mutate(Rarity = calculate_rarity(n), name_type = "fname")
lname_starred <-
lname_starred %>%
mutate(Rarity = calculate_rarity(n), name_type = "lname")
fname_freq %>%
mutate(src = ifelse(src == "B", "1703", "1304")) %>%
ggplot(aes(n)) +
facet_grid(~src) +
geom_histogram(binwidth = 10, aes(fill = Rarity), alpha = 0.75)
lname_freq %>%
mutate(src = ifelse(src == "B", "1703", "1304")) %>%
ggplot(aes(n)) +
facet_grid(~src) +
geom_histogram(binwidth = 10, aes(fill = Rarity), alpha = 0.8)
fname_starred %>%
ggplot(aes(n)) + geom_histogram(binwidth = 10,  alpha = 0.8, aes(fill = Rarity))
freq_threshold
rm(freq_threshold)
freq_threshold
calculate_rarity = function(frequency,name_type = "fname", percentile = 0.5) {
if(name_type == "fname"){
freq <- fname_freq$n
freq = freq[freq>5]
freq_threshold <- quantile(freq,percentile)
print(paste0("The threshold is ",freq_threshold))
} else {
lreq <- lname_freq$n
lreq = lreq[lreq>5]
freq_threshold <- quantile(lreq,percentile)
print(paste0("The threshold is ",freq_threshold))
}
frequency <- tibble(freq = frequency)
frequency %>%
mutate(rarity = as_factor(case_when(
freq == 1 ~ "Unique",
between(freq, 2, 5) ~ "Rare",
between(freq, 5, freq_threshold) ~ "Common",
freq>freq_threshold ~ "Frequent")),
rarity = fct_relevel(rarity, "Unique", "Rare", "Common", "Frequent")) %>%
pull(rarity) %>%
return()
}
fname_freq <-
fname_freq %>%
mutate(Rarity = calculate_rarity(n), name_type = "fname")
freq_threshold
calculate_freq_thresh <- function(name_type,percentile){
if(name_type == "fname"){
freq <- fname_freq$n
freq = freq[freq>5]
return(quantile(freq,percentile))
} else {
lreq <- lname_freq$n
lreq = lreq[lreq>5]
return(quantile(lreq,percentile)  )
}
}
calculate_rarity <- function(frequency,name_type = "fname", percentile = 0.5) {
freq_threshold <- calculate_freq_thresh(name_type,percentile)
print(paste0("The threshold is ",freq_threshold))
frequency <- tibble(freq = frequency)
frequency %>%
mutate(rarity = as_factor(case_when(
freq == 1 ~ "Unique",
between(freq, 2, 5) ~ "Rare",
between(freq, 5, freq_threshold) ~ "Common",
freq>freq_threshold ~ "Frequent")),
rarity = fct_relevel(rarity, "Unique", "Rare", "Common", "Frequent")) %>%
pull(rarity) %>%
return()
}
fname_freq <-
fname_freq %>%
mutate(Rarity = calculate_rarity(n), name_type = "fname")
f_threshold <- calculate_freq_thresh("fname",0.5)
f_threshold
install.packages("glue")
custom <- define_palette(
# swatch = c("black","blue","red","darkgreen","darkgrey","darkorange","pink"),
swatch = c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
gradient = c(lower = "lightblue", upper = "darkblue")
)
custom <- define_palette(
# swatch = c("black","blue","red","darkgreen","darkgrey","darkorange","pink"),
swatch = c("#999999","#E69F00","#56B4E9","#009E73","#F0E442","#0072B2","#D55E00","#CC79A7"),
gradient = c(lower = "lightblue", upper = "darkblue")
)
ggthemr(custom)
library(RColorBrewer)
lname_freq %>%
mutate(src = ifelse(src == "B", "1703", "1304")) %>%
ggplot(aes(n)) +
facet_grid(~src) +
geom_histogram(binwidth = 10, aes(fill = Rarity), alpha = 0.8) +
scale_fill_brewer(palette="Spectral")
# Chunk 1
library(tidyverse)
library(ggthemr)
library(ggvis)
library(forcats)
library(RColorBrewer)
setwd("C:/Users/gurud/Google Drive/Research Assistantship/seq/Gurudev Ilangovan/Record Linkage/userstudy/pipeline/frequencies/")
fname_freq <- read_csv("./fname_freq.csv")
lname_freq <- read_csv("./lname_freq.csv")
starred_data_all <- read_csv("../data_output/all_starred_race.csv")
fname_starred <-
starred_data_all %>%
select(`First Name`, n = FF)
lname_starred <-
starred_data_all %>%
select(`Last Name`, n = LF)
custom <- define_palette(
# swatch = c("black","blue","red","darkgreen","darkgrey","darkorange","pink"),
swatch = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7"),
gradient = c(lower = "lightblue", upper = "darkblue")
)
ggthemr(custom)
# Chunk 2
calculate_freq_thresh <- function(name_type,percentile){
if(name_type == "fname"){
freq <- fname_freq$n
freq = freq[freq>5]
return(quantile(freq,percentile))
} else {
lreq <- lname_freq$n
lreq = lreq[lreq>5]
return(quantile(lreq,percentile)  )
}
}
calculate_rarity <- function(frequency,name_type = "fname", percentile = 0.5) {
freq_threshold <- calculate_freq_thresh(name_type,percentile)
print(paste0("The threshold is ",freq_threshold))
frequency <- tibble(freq = frequency)
frequency %>%
mutate(rarity = as_factor(case_when(
freq == 1 ~ "Unique",
between(freq, 2, 5) ~ "Rare",
between(freq, 5, freq_threshold) ~ "Common",
freq>freq_threshold ~ "Frequent")),
rarity = fct_relevel(rarity, "Unique", "Rare", "Common", "Frequent")) %>%
pull(rarity) %>%
return()
}
fname_freq <-
fname_freq %>%
mutate(Rarity = calculate_rarity(n), name_type = "fname")
lname_freq <-
lname_freq %>%
mutate(Rarity = calculate_rarity(n), name_type = "lname")
fname_starred <-
fname_starred %>%
mutate(Rarity = calculate_rarity(n), name_type = "fname")
lname_starred <-
lname_starred %>%
mutate(Rarity = calculate_rarity(n), name_type = "lname")
f_threshold <- calculate_freq_thresh("fname",0.5)
l_threshold <- calculate_freq_thresh("lname",0.5)
# Chunk 3
fname_freq %>%
mutate(src = ifelse(src == "B", "1703", "1304")) %>%
ggplot(aes(n)) +
facet_grid(~src) +
geom_histogram(binwidth = 10, aes(fill = Rarity), alpha = 0.75)
lname_freq %>%
mutate(src = ifelse(src == "B", "1703", "1304")) %>%
ggplot(aes(n)) +
facet_grid(~src) +
geom_histogram(binwidth = 10, aes(fill = Rarity), alpha = 0.8) +
scale_fill_brewer(palette="Spectral")
lname_freq %>%
mutate(src = ifelse(src == "B", "1703", "1304")) %>%
ggplot(aes(n)) +
facet_grid(~src) +
geom_histogram(binwidth = 10, aes(fill = Rarity), alpha = 0.8) +
scale_fill_brewer(palette="Set1")
scale_fill_brewer(palette="Set1")
ggplot <- function(...) ggplot(...) + scale_color_brewer(palette="Set1")
ggplot(fname_freq, aes(Rarity, fill = Rarity)) +
geom_bar(aes(y = (..count..)/sum(..count..)), alpha = 0.7) +
ylab("Proportion") + ggtitle("Lookup First Name")
scale_colour_brewer(..., palette="Set1")
scale_colour_discrete <- function(...) {
scale_colour_brewer(..., palette="Set1")
}
fname_freq %>%
mutate(src = ifelse(src == "B", "1703", "1304")) %>%
ggplot(aes(n)) +
facet_grid(~src) +
geom_histogram(binwidth = 10, aes(fill = Rarity), alpha = 0.75)
scale_colour_discrete <- function(...) {
scale_colour_brewer(..., palette="Set1")
}
lname_freq %>%
mutate(src = ifelse(src == "B", "1703", "1304")) %>%
ggplot(aes(n)) +
facet_grid(~src) +
geom_histogram(binwidth = 10, aes(fill = Rarity), alpha = 0.8)
library(tidyverse)
library(ggthemr)
library(ggvis)
library(forcats)
library(RColorBrewer)
setwd("C:/Users/gurud/Google Drive/Research Assistantship/seq/Gurudev Ilangovan/Record Linkage/userstudy/pipeline/frequencies/")
fname_freq <- read_csv("./fname_freq.csv")
lname_freq <- read_csv("./lname_freq.csv")
starred_data_all <- read_csv("../data_output/all_starred_race.csv")
fname_starred <-
starred_data_all %>%
select(`First Name`, n = FF)
lname_starred <-
starred_data_all %>%
select(`Last Name`, n = LF)
custom <- define_palette(
# swatch = c("black","blue","red","darkgreen","darkgrey","darkorange","pink"),
swatch = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7"),
gradient = c(lower = "lightblue", upper = "darkblue")
)
ggthemr(custom)
scale_colour_discrete <- function(...) {
scale_colour_brewer(..., palette="Set1")
}
calculate_freq_thresh <- function(name_type,percentile){
if(name_type == "fname"){
freq <- fname_freq$n
freq = freq[freq>5]
return(quantile(freq,percentile))
} else {
lreq <- lname_freq$n
lreq = lreq[lreq>5]
return(quantile(lreq,percentile)  )
}
}
calculate_rarity <- function(frequency,name_type = "fname", percentile = 0.5) {
freq_threshold <- calculate_freq_thresh(name_type,percentile)
print(paste0("The threshold is ",freq_threshold))
frequency <- tibble(freq = frequency)
frequency %>%
mutate(rarity = as_factor(case_when(
freq == 1 ~ "Unique",
between(freq, 2, 5) ~ "Rare",
between(freq, 5, freq_threshold) ~ "Common",
freq>freq_threshold ~ "Frequent")),
rarity = fct_relevel(rarity, "Unique", "Rare", "Common", "Frequent")) %>%
pull(rarity) %>%
return()
}
fname_freq <-
fname_freq %>%
mutate(Rarity = calculate_rarity(n), name_type = "fname")
lname_freq <-
lname_freq %>%
mutate(Rarity = calculate_rarity(n), name_type = "lname")
fname_starred <-
fname_starred %>%
mutate(Rarity = calculate_rarity(n), name_type = "fname")
lname_starred <-
lname_starred %>%
mutate(Rarity = calculate_rarity(n), name_type = "lname")
f_threshold <- calculate_freq_thresh("fname",0.5)
l_threshold <- calculate_freq_thresh("lname",0.5)
fname_freq %>%
mutate(src = ifelse(src == "B", "1703", "1304")) %>%
ggplot(aes(n)) +
facet_grid(~src) +
geom_histogram(binwidth = 10, aes(fill = Rarity), alpha = 0.75)
fname_freq %>%
mutate(src = ifelse(src == "B", "1703", "1304")) %>%
ggplot(aes(n)) +
facet_grid(~src) +
geom_histogram(binwidth = 10, aes(fill = Rarity), alpha = 0.75) +
scale_colour_brewer(palette="Set1")
fname_freq %>%
mutate(src = ifelse(src == "B", "1703", "1304")) %>%
ggplot(aes(n)) +
facet_grid(~src) +
geom_histogram(binwidth = 10, aes(fill = Rarity), alpha = 0.75) +
scale_colour_brewer(palette="Set2")
scale_colour_discrete <- function(...) {
scale_colour_brewer(..., palette="Set1")
}
scale_colour_brewer(..., palette="Set2")
scale_colour_discrete <- function(...) {
scale_colour_brewer(..., palette="Set2")
}
fname_freq %>%
mutate(src = ifelse(src == "B", "1703", "1304")) %>%
ggplot(aes(n)) +
facet_grid(~src) +
geom_histogram(binwidth = 10, aes(fill = Rarity), alpha = 0.75) +
scale_colour_brewer(palette="Set2")
scale_colour_brewer(palette="Set2")
display.brewer.all()
brewer.pal
brewer.pal("Set1")
brewer.pal(5,"Set1")
custom <- define_palette(
# swatch = c("black","blue","red","darkgreen","darkgrey","darkorange","pink"),
swatch = c("#000000", brewer.pal(5,"Set1")),
gradient = c(lower = "lightblue", upper = "darkblue")
)
ggthemr(custom)
